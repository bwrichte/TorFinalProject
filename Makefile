# Makefile.in generated by automake 1.11.3 from Makefile.am.
# Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011 Free Software
# Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# Copyright (c) 2001-2004, Roger Dingledine
# Copyright (c) 2004-2006, Roger Dingledine, Nick Mathewson
# Copyright (c) 2007-2011, The Tor Project, Inc.
# See LICENSE for licensing information

# We use a two-step process to generate documentation from asciidoc files.
#
# First, we use asciidoc/a2x to process the asciidoc files into .1.in and
# .html.in files (see the asciidoc-helper.sh script). These are the same as
# the regular .1 and .html files, except that they still have some autoconf
# variables set in them.
#
# Second, we use config.status to turn .1.in files into .1 files and
# .html.in files into .html files.
#
# We do the steps in this order so that we can ship the .*.in files as
# part of the source distribution, so that people without asciidoc can
# just use the .1 and .html files.






pkgdatadir = $(datadir)/tor
pkgincludedir = $(includedir)/tor
pkglibdir = $(libdir)/tor
pkglibexecdir = $(libexecdir)/tor
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-pc-linux-gnu
host_triplet = i686-pc-linux-gnu
bin_PROGRAMS = src/or/tor$(EXEEXT) src/tools/tor-resolve$(EXEEXT) \
	src/tools/tor-gencert$(EXEEXT) $(am__EXEEXT_1)
TESTS = src/test/test$(EXEEXT)
noinst_PROGRAMS = src/test/test$(EXEEXT) src/test/test-child$(EXEEXT) \
	src/test/bench$(EXEEXT) src/tools/tor-checkkey$(EXEEXT)
DIST_COMMON = README $(am__configure_deps) $(noinst_HEADERS) \
	$(srcdir)/Doxyfile.in $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in $(srcdir)/contrib/include.am \
	$(srcdir)/contrib/suse/include.am $(srcdir)/doc/include.am \
	$(srcdir)/orconfig.h.in $(srcdir)/src/common/include.am \
	$(srcdir)/src/config/include.am $(srcdir)/src/include.am \
	$(srcdir)/src/or/include.am $(srcdir)/src/test/include.am \
	$(srcdir)/src/tools/include.am \
	$(srcdir)/src/tools/tor-fw-helper/include.am \
	$(srcdir)/src/win32/include.am $(top_srcdir)/configure \
	$(top_srcdir)/contrib/suse/tor.sh.in \
	$(top_srcdir)/contrib/tor.logrotate.in \
	$(top_srcdir)/contrib/tor.sh.in \
	$(top_srcdir)/contrib/torctl.in \
	$(top_srcdir)/contrib/torify.in \
	$(top_srcdir)/src/config/torrc.sample.in ChangeLog INSTALL \
	compile config.guess config.sub depcomp install-sh missing
#am__append_1 = src/tools/tor-fw-helper/tor-fw-helper
subdir = .
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno config.status.lineno
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = orconfig.h
CONFIG_CLEAN_FILES = Doxyfile contrib/suse/tor.sh \
	contrib/tor.logrotate contrib/tor.sh contrib/torctl \
	contrib/torify src/config/torrc.sample
CONFIG_CLEAN_VPATH_FILES =
LIBRARIES = $(noinst_LIBRARIES)
ARFLAGS = cru
AM_V_AR = $(am__v_AR_$(V))
am__v_AR_ = $(am__v_AR_$(AM_DEFAULT_VERBOSITY))
am__v_AR_0 = @echo "  AR    " $@;
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
src_common_libor_crypto_a_AR = $(AR) $(ARFLAGS)
src_common_libor_crypto_a_LIBADD =
am__dirstamp = $(am__leading_dot)dirstamp
am_src_common_libor_crypto_a_OBJECTS = src/common/aes.$(OBJEXT) \
	src/common/crypto.$(OBJEXT) src/common/torgzip.$(OBJEXT) \
	src/common/tortls.$(OBJEXT)
src_common_libor_crypto_a_OBJECTS =  \
	$(am_src_common_libor_crypto_a_OBJECTS)
src_common_libor_event_a_AR = $(AR) $(ARFLAGS)
src_common_libor_event_a_LIBADD =
am_src_common_libor_event_a_OBJECTS =  \
	src/common/compat_libevent.$(OBJEXT)
src_common_libor_event_a_OBJECTS =  \
	$(am_src_common_libor_event_a_OBJECTS)
src_common_libor_a_AR = $(AR) $(ARFLAGS)
src_common_libor_a_LIBADD =
am__src_common_libor_a_SOURCES_DIST = src/common/address.c \
	src/common/compat.c src/common/container.c src/common/di_ops.c \
	src/common/log.c src/common/memarea.c src/common/mempool.c \
	src/common/procmon.c src/common/util.c \
	src/common/util_codedigest.c src/common/OpenBSD_malloc_Linux.c
#am__objects_1 = src/common/OpenBSD_malloc_Linux.$(OBJEXT)
am_src_common_libor_a_OBJECTS = src/common/address.$(OBJEXT) \
	src/common/compat.$(OBJEXT) src/common/container.$(OBJEXT) \
	src/common/di_ops.$(OBJEXT) src/common/log.$(OBJEXT) \
	src/common/memarea.$(OBJEXT) src/common/mempool.$(OBJEXT) \
	src/common/procmon.$(OBJEXT) src/common/util.$(OBJEXT) \
	src/common/util_codedigest.$(OBJEXT) $(am__objects_1)
src_common_libor_a_OBJECTS = $(am_src_common_libor_a_OBJECTS)
src_or_libtor_a_AR = $(AR) $(ARFLAGS)
src_or_libtor_a_LIBADD =
am__src_or_libtor_a_SOURCES_DIST = src/or/buffers.c \
	src/or/circuitbuild.c src/or/circuitlist.c src/or/circuituse.c \
	src/or/command.c src/or/config.c src/or/confparse.c \
	src/or/connection.c src/or/connection_edge.c \
	src/or/connection_or.c src/or/control.c src/or/cpuworker.c \
	src/or/directory.c src/or/dirserv.c src/or/dirvote.c \
	src/or/dns.c src/or/dnsserv.c src/or/geoip.c \
	src/or/hibernate.c src/or/main.c src/or/microdesc.c \
	src/or/networkstatus.c src/or/nodelist.c src/or/onion.c \
	src/or/transports.c src/or/policies.c src/or/reasons.c \
	src/or/relay.c src/or/rendclient.c src/or/rendcommon.c \
	src/or/rendmid.c src/or/rendservice.c src/or/rephist.c \
	src/or/replaycache.c src/or/router.c src/or/routerlist.c \
	src/or/routerparse.c src/or/routerset.c src/or/statefile.c \
	src/or/status.c src/or/eventdns.c src/or/ntmain.c \
	src/or/config_codedigest.c
#am__objects_2 = src/or/eventdns.$(OBJEXT)
#am__objects_3 = src/or/ntmain.$(OBJEXT)
am_src_or_libtor_a_OBJECTS = src/or/buffers.$(OBJEXT) \
	src/or/circuitbuild.$(OBJEXT) src/or/circuitlist.$(OBJEXT) \
	src/or/circuituse.$(OBJEXT) src/or/command.$(OBJEXT) \
	src/or/config.$(OBJEXT) src/or/confparse.$(OBJEXT) \
	src/or/connection.$(OBJEXT) src/or/connection_edge.$(OBJEXT) \
	src/or/connection_or.$(OBJEXT) src/or/control.$(OBJEXT) \
	src/or/cpuworker.$(OBJEXT) src/or/directory.$(OBJEXT) \
	src/or/dirserv.$(OBJEXT) src/or/dirvote.$(OBJEXT) \
	src/or/dns.$(OBJEXT) src/or/dnsserv.$(OBJEXT) \
	src/or/geoip.$(OBJEXT) src/or/hibernate.$(OBJEXT) \
	src/or/main.$(OBJEXT) src/or/microdesc.$(OBJEXT) \
	src/or/networkstatus.$(OBJEXT) src/or/nodelist.$(OBJEXT) \
	src/or/onion.$(OBJEXT) src/or/transports.$(OBJEXT) \
	src/or/policies.$(OBJEXT) src/or/reasons.$(OBJEXT) \
	src/or/relay.$(OBJEXT) src/or/rendclient.$(OBJEXT) \
	src/or/rendcommon.$(OBJEXT) src/or/rendmid.$(OBJEXT) \
	src/or/rendservice.$(OBJEXT) src/or/rephist.$(OBJEXT) \
	src/or/replaycache.$(OBJEXT) src/or/router.$(OBJEXT) \
	src/or/routerlist.$(OBJEXT) src/or/routerparse.$(OBJEXT) \
	src/or/routerset.$(OBJEXT) src/or/statefile.$(OBJEXT) \
	src/or/status.$(OBJEXT) $(am__objects_2) $(am__objects_3) \
	src/or/config_codedigest.$(OBJEXT)
src_or_libtor_a_OBJECTS = $(am_src_or_libtor_a_OBJECTS)
#am__EXEEXT_1 = src/tools/tor-fw-helper/tor-fw-helper$(EXEEXT)
am__installdirs = "$(DESTDIR)$(bindir)" "$(DESTDIR)$(bindir)" \
	"$(DESTDIR)$(man1dir)" "$(DESTDIR)$(confdir)" \
	"$(DESTDIR)$(docdir)" "$(DESTDIR)$(tordatadir)"
PROGRAMS = $(bin_PROGRAMS) $(noinst_PROGRAMS)
am_src_or_tor_OBJECTS = src/or/tor_main.$(OBJEXT)
src_or_tor_OBJECTS = $(am_src_or_tor_OBJECTS)
src_or_tor_DEPENDENCIES = src/or/libtor.a src/common/libor.a \
	src/common/libor-crypto.a src/common/libor-event.a
src_or_tor_LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(src_or_tor_LDFLAGS) \
	$(LDFLAGS) -o $@
am_src_test_bench_OBJECTS = src/test/src_test_bench-bench.$(OBJEXT)
src_test_bench_OBJECTS = $(am_src_test_bench_OBJECTS)
src_test_bench_DEPENDENCIES = src/or/libtor.a src/common/libor.a \
	src/common/libor-crypto.a src/common/libor-event.a
src_test_bench_LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(src_test_bench_LDFLAGS) $(LDFLAGS) -o $@
am_src_test_test_OBJECTS = src/test/src_test_test-test.$(OBJEXT) \
	src/test/src_test_test-test_addr.$(OBJEXT) \
	src/test/src_test_test-test_containers.$(OBJEXT) \
	src/test/src_test_test-test_crypto.$(OBJEXT) \
	src/test/src_test_test-test_data.$(OBJEXT) \
	src/test/src_test_test-test_dir.$(OBJEXT) \
	src/test/src_test_test-test_introduce.$(OBJEXT) \
	src/test/src_test_test-test_microdesc.$(OBJEXT) \
	src/test/src_test_test-test_pt.$(OBJEXT) \
	src/test/src_test_test-test_replay.$(OBJEXT) \
	src/test/src_test_test-test_util.$(OBJEXT) \
	src/test/src_test_test-test_config.$(OBJEXT) \
	src/test/src_test_test-tinytest.$(OBJEXT)
src_test_test_OBJECTS = $(am_src_test_test_OBJECTS)
src_test_test_DEPENDENCIES = src/or/libtor.a src/common/libor.a \
	src/common/libor-crypto.a src/common/libor-event.a
src_test_test_LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(src_test_test_LDFLAGS) $(LDFLAGS) -o $@
src_test_test_child_SOURCES = src/test/test-child.c
src_test_test_child_OBJECTS = src/test/test-child.$(OBJEXT)
src_test_test_child_LDADD = $(LDADD)
am_src_tools_tor_checkkey_OBJECTS = src/tools/tor-checkkey.$(OBJEXT)
src_tools_tor_checkkey_OBJECTS = $(am_src_tools_tor_checkkey_OBJECTS)
src_tools_tor_checkkey_DEPENDENCIES = src/common/libor.a \
	src/common/libor-crypto.a
src_tools_tor_checkkey_LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(src_tools_tor_checkkey_LDFLAGS) $(LDFLAGS) -o $@
am_src_tools_tor_fw_helper_tor_fw_helper_OBJECTS = src/tools/tor-fw-helper/src_tools_tor_fw_helper_tor_fw_helper-tor-fw-helper.$(OBJEXT) \
	src/tools/tor-fw-helper/src_tools_tor_fw_helper_tor_fw_helper-tor-fw-helper-natpmp.$(OBJEXT) \
	src/tools/tor-fw-helper/src_tools_tor_fw_helper_tor_fw_helper-tor-fw-helper-upnp.$(OBJEXT)
src_tools_tor_fw_helper_tor_fw_helper_OBJECTS =  \
	$(am_src_tools_tor_fw_helper_tor_fw_helper_OBJECTS)
am__DEPENDENCIES_1 =
src_tools_tor_fw_helper_tor_fw_helper_DEPENDENCIES =  \
	src/common/libor.a $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
src_tools_tor_fw_helper_tor_fw_helper_LINK = $(CCLD) $(AM_CFLAGS) \
	$(CFLAGS) $(src_tools_tor_fw_helper_tor_fw_helper_LDFLAGS) \
	$(LDFLAGS) -o $@
am_src_tools_tor_gencert_OBJECTS = src/tools/tor-gencert.$(OBJEXT)
src_tools_tor_gencert_OBJECTS = $(am_src_tools_tor_gencert_OBJECTS)
src_tools_tor_gencert_DEPENDENCIES = src/common/libor.a \
	src/common/libor-crypto.a
src_tools_tor_gencert_LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(src_tools_tor_gencert_LDFLAGS) $(LDFLAGS) -o $@
am_src_tools_tor_resolve_OBJECTS = src/tools/tor-resolve.$(OBJEXT)
src_tools_tor_resolve_OBJECTS = $(am_src_tools_tor_resolve_OBJECTS)
src_tools_tor_resolve_DEPENDENCIES = src/common/libor.a
src_tools_tor_resolve_LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(src_tools_tor_resolve_LDFLAGS) $(LDFLAGS) -o $@
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
SCRIPTS = $(bin_SCRIPTS)
DEFAULT_INCLUDES = -I.
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC    " $@;
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD  " $@;
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN   " $@;
SOURCES = $(src_common_libor_crypto_a_SOURCES) \
	$(src_common_libor_event_a_SOURCES) \
	$(src_common_libor_a_SOURCES) $(src_or_libtor_a_SOURCES) \
	$(src_or_tor_SOURCES) $(src_test_bench_SOURCES) \
	$(src_test_test_SOURCES) src/test/test-child.c \
	$(src_tools_tor_checkkey_SOURCES) \
	$(src_tools_tor_fw_helper_tor_fw_helper_SOURCES) \
	$(src_tools_tor_gencert_SOURCES) \
	$(src_tools_tor_resolve_SOURCES)
DIST_SOURCES = $(src_common_libor_crypto_a_SOURCES) \
	$(src_common_libor_event_a_SOURCES) \
	$(am__src_common_libor_a_SOURCES_DIST) \
	$(am__src_or_libtor_a_SOURCES_DIST) $(src_or_tor_SOURCES) \
	$(src_test_bench_SOURCES) $(src_test_test_SOURCES) \
	src/test/test-child.c $(src_tools_tor_checkkey_SOURCES) \
	$(src_tools_tor_fw_helper_tor_fw_helper_SOURCES) \
	$(src_tools_tor_gencert_SOURCES) \
	$(src_tools_tor_resolve_SOURCES)
man1dir = $(mandir)/man1
NROFF = nroff
MANS = $(nodist_man1_MANS)
DATA = $(conf_DATA) $(doc_DATA) $(tordata_DATA)
HEADERS = $(noinst_HEADERS)
ETAGS = etags
CTAGS = ctags
am__tty_colors = \
red=; grn=; lgn=; blu=; std=
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
distdir = $(PACKAGE)-$(VERSION)
top_distdir = $(distdir)
am__remove_distdir = \
  if test -d "$(distdir)"; then \
    find "$(distdir)" -type d ! -perm -200 -exec chmod u+w {} ';' \
      && rm -rf "$(distdir)" \
      || { sleep 5 && rm -rf "$(distdir)"; }; \
  else :; fi
DIST_ARCHIVES = $(distdir).tar.gz
GZIP_ENV = --best
distuninstallcheck_listfiles = find . -type f -print
am__distuninstallcheck_listfiles = $(distuninstallcheck_listfiles) \
  | sed 's|^\./|$(prefix)/|' | grep -v '$(infodir)/dir$$'
distcleancheck_listfiles = find . -type f -print
A2X = /usr/bin/a2x
ACLOCAL = ${SHELL} /home/bwrichte/Documents/cos561/tor/missing --run aclocal-1.11
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 0
AR = ar
ASCIIDOC = /usr/bin/asciidoc
AUTOCONF = ${SHELL} /home/bwrichte/Documents/cos561/tor/missing --run autoconf
AUTOHEADER = ${SHELL} /home/bwrichte/Documents/cos561/tor/missing --run autoheader
AUTOMAKE = ${SHELL} /home/bwrichte/Documents/cos561/tor/missing --run automake-1.11
AWK = gawk
BINDIR = /usr/local/bin
BUILDDIR = /home/bwrichte/Documents/cos561/tor
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2 -D_FORTIFY_SOURCE=2 -fstack-protector-all -Wstack-protector -fwrapv -fPIE -Wall -fno-strict-aliasing
CONFDIR = /usr/local/etc/tor
CPP = gcc -E
CPPFLAGS =  -I${top_srcdir}/src/common   
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LDFLAGS =  -pie -z relro -z now
LIBOBJS = 
LIBS = -lpthread -lrt -ldl 
LOCALSTATEDIR = /usr/local/var
LOGFACILITY = 
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/bwrichte/Documents/cos561/tor/missing --run makeinfo
MKDIR_P = /bin/mkdir -p
OBJEXT = o
OPENSSL = /usr/bin/openssl
PACKAGE = tor
PACKAGE_BUGREPORT = 
PACKAGE_NAME = tor
PACKAGE_STRING = tor 0.2.4.3-alpha-dev
PACKAGE_TARNAME = tor
PACKAGE_URL = 
PACKAGE_VERSION = 0.2.4.3-alpha-dev
PATH_SEPARATOR = :
RANLIB = ranlib
SED = sed
SET_MAKE = 
SHA1SUM = /usr/bin/sha1sum
SHELL = /bin/bash
STRIP = 
TORGROUP = _tor
TORUSER = _tor
TOR_CPPFLAGS_libevent = 
TOR_CPPFLAGS_libminiupnpc = 
TOR_CPPFLAGS_libnatpmp = 
TOR_CPPFLAGS_openssl = 
TOR_CPPFLAGS_zlib = 
TOR_LDFLAGS_libevent = 
TOR_LDFLAGS_libminiupnpc = 
TOR_LDFLAGS_libnatpmp = 
TOR_LDFLAGS_openssl = 
TOR_LDFLAGS_zlib = 
TOR_LIBEVENT_LIBS = -levent
TOR_LIB_GDI = 
TOR_LIB_IPHLPAPI = 
TOR_LIB_MATH = -lm
TOR_LIB_WS32 = 
TOR_OPENSSL_LIBS = -lssl -lcrypto
TOR_ZLIB_LIBS = -lz
VERSION = 0.2.4.3-alpha-dev
abs_builddir = /home/bwrichte/Documents/cos561/tor
abs_srcdir = /home/bwrichte/Documents/cos561/tor
abs_top_builddir = /home/bwrichte/Documents/cos561/tor
abs_top_srcdir = /home/bwrichte/Documents/cos561/tor
ac_ct_CC = gcc
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = i686-pc-linux-gnu
build_alias = 
build_cpu = i686
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = /usr/local
host = i686-pc-linux-gnu
host_alias = 
host_cpu = i686
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/bwrichte/Documents/cos561/tor/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = 
top_builddir = .
top_srcdir = .

# "foreign" means we don't follow GNU package layout standards
# 1.9 means we require automake vesion 1.9
AUTOMAKE_OPTIONS = foreign 1.9 subdir-objects
noinst_LIBRARIES = src/common/libor.a src/common/libor-crypto.a \
	src/common/libor-event.a src/or/libtor.a
EXTRA_DIST = src/common/common_sha1.i src/common/Makefile.nmake \
	src/or/ntmain.c src/or/or_sha1.i src/or/Makefile.nmake \
	src/win32/orconfig.h src/config/geoip doc/HACKING \
	doc/asciidoc-helper.sh $(html_in) $(man_in) $(txt_in) \
	doc/tor-rpm-creation.txt doc/tor-win32-mingw-creation.txt \
	doc/spec/README doc/state-contents.txt contrib/suse/tor.sh \
	contrib/cross.sh contrib/exitlist contrib/linux-tor-prio.sh \
	contrib/package_nsis-mingw.sh contrib/rc.subr \
	contrib/tor-ctrl.sh contrib/tor-exit-notice.html \
	contrib/tor-mingw.nsi.in contrib/tor-tsocks.conf \
	contrib/tor.ico contrib/tor.nsi.in contrib/tor.sh \
	contrib/torctl ChangeLog INSTALL LICENSE Makefile.nmake README \
	ReleaseNotes
noinst_HEADERS = $(COMMONHEADERS) $(ORHEADERS) micro-revision.i \
	src/test/tinytest.h src/test/tinytest_macros.h src/test/test.h \
	src/tools/tor-fw-helper/tor-fw-helper.h \
	src/tools/tor-fw-helper/tor-fw-helper-natpmp.h \
	src/tools/tor-fw-helper/tor-fw-helper-upnp.h
CLEANFILES = micro-revision.i $(asciidoc_product) config.log
DISTCLEANFILES = src/common/common_sha1.i $(html_in) $(man_in)
bin_SCRIPTS = contrib/torify

#CFLAGS  = -Wall -Wpointer-arith -O2
AM_CPPFLAGS = -I$(srcdir)/src/common -Isrc/common -I$(srcdir)/src/or \
	-Isrc/or -DSHARE_DATADIR="\"$(datadir)\"" \
	-DLOCALSTATEDIR="\"$(localstatedir)\"" \
	-DBINDIR="\"$(bindir)\""
libor_extra_source = 
#libor_extra_source = src/common/OpenBSD_malloc_Linux.c
src_common_libor_a_SOURCES = \
  src/common/address.c					\
  src/common/compat.c					\
  src/common/container.c				\
  src/common/di_ops.c					\
  src/common/log.c					\
  src/common/memarea.c					\
  src/common/mempool.c					\
  src/common/procmon.c					\
  src/common/util.c					\
  src/common/util_codedigest.c				\
  $(libor_extra_source)

src_common_libor_crypto_a_SOURCES = \
  src/common/aes.c		\
  src/common/crypto.c		\
  src/common/torgzip.c		\
  src/common/tortls.c

src_common_libor_event_a_SOURCES = src/common/compat_libevent.c
COMMONHEADERS = \
  src/common/address.h				\
  src/common/aes.h				\
  src/common/ciphers.inc			\
  src/common/compat.h				\
  src/common/compat_libevent.h			\
  src/common/container.h			\
  src/common/crypto.h				\
  src/common/di_ops.h				\
  src/common/ht.h				\
  src/common/memarea.h				\
  src/common/mempool.h				\
  src/common/procmon.h				\
  src/common/strlcat.c				\
  src/common/strlcpy.c				\
  src/common/torgzip.h				\
  src/common/torint.h				\
  src/common/torlog.h				\
  src/common/tortls.h				\
  src/common/util.h

tor_platform_source = 
#tor_platform_source = src/or/ntmain.c
#evdns_source = src/or/eventdns.c
evdns_source = 
src_or_libtor_a_SOURCES = \
	src/or/buffers.c				\
	src/or/circuitbuild.c				\
	src/or/circuitlist.c				\
	src/or/circuituse.c				\
	src/or/command.c				\
	src/or/config.c					\
	src/or/confparse.c				\
	src/or/connection.c				\
	src/or/connection_edge.c			\
	src/or/connection_or.c				\
	src/or/control.c				\
	src/or/cpuworker.c				\
	src/or/directory.c				\
	src/or/dirserv.c				\
	src/or/dirvote.c				\
	src/or/dns.c					\
	src/or/dnsserv.c				\
	src/or/geoip.c					\
	src/or/hibernate.c				\
	src/or/main.c					\
	src/or/microdesc.c				\
	src/or/networkstatus.c				\
	src/or/nodelist.c				\
	src/or/onion.c					\
	src/or/transports.c				\
	src/or/policies.c				\
	src/or/reasons.c				\
	src/or/relay.c					\
	src/or/rendclient.c				\
	src/or/rendcommon.c				\
	src/or/rendmid.c				\
	src/or/rendservice.c				\
	src/or/rephist.c				\
	src/or/replaycache.c				\
	src/or/router.c					\
	src/or/routerlist.c				\
	src/or/routerparse.c				\
	src/or/routerset.c				\
	src/or/statefile.c				\
	src/or/status.c					\
	$(evdns_source)					\
	$(tor_platform_source)				\
	src/or/config_codedigest.c


#libtor_a_LIBADD = ../common/libor.a ../common/libor-crypto.a \
#	../common/libor-event.a
src_or_tor_SOURCES = src/or/tor_main.c

# -L flags need to go in LDFLAGS. -l flags need to go in LDADD.
# This seems to matter nowhere but on windows, but I assure you that it
# matters a lot there, and is quite hard to debug if you forget to do it.
src_or_tor_LDFLAGS =   
src_or_tor_LDADD = src/or/libtor.a src/common/libor.a src/common/libor-crypto.a \
	src/common/libor-event.a \
	-lz -lm -levent -lssl -lcrypto \
	 

ORHEADERS = \
	src/or/buffers.h				\
	src/or/circuitbuild.h				\
	src/or/circuitlist.h				\
	src/or/circuituse.h				\
	src/or/command.h				\
	src/or/config.h					\
	src/or/confparse.h				\
	src/or/connection.h				\
	src/or/connection_edge.h			\
	src/or/connection_or.h				\
	src/or/control.h				\
	src/or/cpuworker.h				\
	src/or/directory.h				\
	src/or/dirserv.h				\
	src/or/dirvote.h				\
	src/or/dns.h					\
	src/or/dnsserv.h				\
	src/or/eventdns.h				\
	src/or/eventdns_tor.h				\
	src/or/geoip.h					\
	src/or/hibernate.h				\
	src/or/main.h					\
	src/or/microdesc.h				\
	src/or/networkstatus.h				\
	src/or/nodelist.h				\
	src/or/ntmain.h					\
	src/or/onion.h					\
	src/or/or.h					\
	src/or/transports.h				\
	src/or/policies.h				\
	src/or/reasons.h				\
	src/or/relay.h					\
	src/or/rendclient.h				\
	src/or/rendcommon.h				\
	src/or/rendmid.h				\
	src/or/rendservice.h				\
	src/or/rephist.h				\
	src/or/replaycache.h				\
	src/or/router.h					\
	src/or/routerlist.h				\
	src/or/routerset.h				\
	src/or/routerparse.h				\
	src/or/statefile.h				\
	src/or/status.h

src_test_AM_CPPFLAGS = -DSHARE_DATADIR="\"$(datadir)\"" \
        -DLOCALSTATEDIR="\"$(localstatedir)\"" \
        -DBINDIR="\"$(bindir)\""	       \
	-I"$(top_srcdir)/src/or"


# -L flags need to go in LDFLAGS. -l flags need to go in LDADD.
# This seems to matter nowhere but on Windows, but I assure you that it
# matters a lot there, and is quite hard to debug if you forget to do it.
src_test_test_SOURCES = \
	src/test/test.c \
	src/test/test_addr.c \
	src/test/test_containers.c \
	src/test/test_crypto.c \
	src/test/test_data.c \
	src/test/test_dir.c \
	src/test/test_introduce.c \
	src/test/test_microdesc.c \
	src/test/test_pt.c \
	src/test/test_replay.c \
	src/test/test_util.c \
	src/test/test_config.c \
	src/test/tinytest.c

src_test_test_CPPFLAGS = $(src_test_AM_CPPFLAGS)
src_test_bench_SOURCES = \
	src/test/bench.c

src_test_bench_CPPFLAGS = $(src_test_AM_CPPFLAGS)
src_test_test_LDFLAGS =   \
        

src_test_test_LDADD = src/or/libtor.a src/common/libor.a src/common/libor-crypto.a \
	src/common/libor-event.a \
	-lz -lm -levent \
	-lssl -lcrypto  

src_test_bench_LDFLAGS =   \
        

src_test_bench_LDADD = src/or/libtor.a src/common/libor.a src/common/libor-crypto.a \
	src/common/libor-event.a \
	-lz -lm -levent \
	-lssl -lcrypto  

src_tools_tor_resolve_SOURCES = src/tools/tor-resolve.c
src_tools_tor_resolve_LDFLAGS = 
src_tools_tor_resolve_LDADD = src/common/libor.a -lm 
src_tools_tor_gencert_SOURCES = src/tools/tor-gencert.c
src_tools_tor_gencert_LDFLAGS =  
src_tools_tor_gencert_LDADD = src/common/libor.a src/common/libor-crypto.a \
        -lm -lz -lssl -lcrypto \
         

src_tools_tor_checkkey_SOURCES = src/tools/tor-checkkey.c
src_tools_tor_checkkey_LDFLAGS =  
src_tools_tor_checkkey_LDADD = src/common/libor.a src/common/libor-crypto.a \
        -lm -lz -lssl -lcrypto \
         

src_tools_tor_fw_helper_tor_fw_helper_SOURCES = \
	src/tools/tor-fw-helper/tor-fw-helper.c \
	src/tools/tor-fw-helper/tor-fw-helper-natpmp.c \
	src/tools/tor-fw-helper/tor-fw-helper-upnp.c

nat_pmp_ldflags = 
#nat_pmp_ldflags = 
nat_pmp_ldadd = 
#nat_pmp_ldadd = -lnatpmp 
nat_pmp_cppflags = 
#nat_pmp_cppflags = 
miniupnpc_ldflags = 
#miniupnpc_ldflags = 
miniupnpc_ldadd = 
#miniupnpc_ldadd = -lminiupnpc -lm 
miniupnpc_cppflags = 
#miniupnpc_cppflags = 
src_tools_tor_fw_helper_tor_fw_helper_LDFLAGS = $(nat_pmp_ldflags) $(miniupnpc_ldflags)
src_tools_tor_fw_helper_tor_fw_helper_LDADD = src/common/libor.a $(nat_pmp_ldadd) $(miniupnpc_ldadd) 
src_tools_tor_fw_helper_tor_fw_helper_CPPFLAGS = $(nat_pmp_cppflags) $(miniupnpc_cppflags)
confdir = $(sysconfdir)/tor
tordatadir = $(datadir)/tor
# fallback-consensus
conf_DATA = src/config/torrc.sample contrib/tor-tsocks.conf
tordata_DATA = src/config/geoip
regular_mans = doc/tor doc/tor-gencert doc/tor-resolve doc/torify
all_mans = $(regular_mans) doc/tor-fw-helper
nodist_man1_MANS = 
#nodist_man1_MANS = $(regular_mans:=.1)
##nodist_man1_MANS = $(all_mans:=.1)
doc_DATA = 
#doc_DATA = $(regular_mans:=.html)
##doc_DATA = $(all_mans:=.html)
html_in = 
#html_in = $(all_mans:=.html.in)
man_in = 
#man_in = $(all_mans:=.1.in)
txt_in = 
#txt_in = $(all_mans:=.1.txt)
asciidoc_product = $(nodist_man1_MANS) $(doc_DATA)
all: orconfig.h
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .c .o .obj
am--refresh: Makefile
	@:
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(srcdir)/src/include.am $(srcdir)/src/common/include.am $(srcdir)/src/or/include.am $(srcdir)/src/test/include.am $(srcdir)/src/tools/include.am $(srcdir)/src/tools/tor-fw-helper/include.am $(srcdir)/src/win32/include.am $(srcdir)/src/config/include.am $(srcdir)/doc/include.am $(srcdir)/contrib/include.am $(srcdir)/contrib/suse/include.am $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      echo ' cd $(srcdir) && $(AUTOMAKE) --foreign'; \
	      $(am__cd) $(srcdir) && $(AUTOMAKE) --foreign \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    echo ' $(SHELL) ./config.status'; \
	    $(SHELL) ./config.status;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe);; \
	esac;
$(srcdir)/src/include.am $(srcdir)/src/common/include.am $(srcdir)/src/or/include.am $(srcdir)/src/test/include.am $(srcdir)/src/tools/include.am $(srcdir)/src/tools/tor-fw-helper/include.am $(srcdir)/src/win32/include.am $(srcdir)/src/config/include.am $(srcdir)/doc/include.am $(srcdir)/contrib/include.am $(srcdir)/contrib/suse/include.am:

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck

$(top_srcdir)/configure:  $(am__configure_deps)
	$(am__cd) $(srcdir) && $(AUTOCONF)
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	$(am__cd) $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)
$(am__aclocal_m4_deps):

orconfig.h: stamp-h1
	@if test ! -f $@; then rm -f stamp-h1; else :; fi
	@if test ! -f $@; then $(MAKE) $(AM_MAKEFLAGS) stamp-h1; else :; fi

stamp-h1: $(srcdir)/orconfig.h.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status orconfig.h
$(srcdir)/orconfig.h.in:  $(am__configure_deps) 
	($(am__cd) $(top_srcdir) && $(AUTOHEADER))
	rm -f stamp-h1
	touch $@

distclean-hdr:
	-rm -f orconfig.h stamp-h1
Doxyfile: $(top_builddir)/config.status $(srcdir)/Doxyfile.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
contrib/suse/tor.sh: $(top_builddir)/config.status $(top_srcdir)/contrib/suse/tor.sh.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
contrib/tor.logrotate: $(top_builddir)/config.status $(top_srcdir)/contrib/tor.logrotate.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
contrib/tor.sh: $(top_builddir)/config.status $(top_srcdir)/contrib/tor.sh.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
contrib/torctl: $(top_builddir)/config.status $(top_srcdir)/contrib/torctl.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
contrib/torify: $(top_builddir)/config.status $(top_srcdir)/contrib/torify.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
src/config/torrc.sample: $(top_builddir)/config.status $(top_srcdir)/src/config/torrc.sample.in
	cd $(top_builddir) && $(SHELL) ./config.status $@

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)
src/common/$(am__dirstamp):
	@$(MKDIR_P) src/common
	@: > src/common/$(am__dirstamp)
src/common/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/common/$(DEPDIR)
	@: > src/common/$(DEPDIR)/$(am__dirstamp)
src/common/aes.$(OBJEXT): src/common/$(am__dirstamp) \
	src/common/$(DEPDIR)/$(am__dirstamp)
src/common/crypto.$(OBJEXT): src/common/$(am__dirstamp) \
	src/common/$(DEPDIR)/$(am__dirstamp)
src/common/torgzip.$(OBJEXT): src/common/$(am__dirstamp) \
	src/common/$(DEPDIR)/$(am__dirstamp)
src/common/tortls.$(OBJEXT): src/common/$(am__dirstamp) \
	src/common/$(DEPDIR)/$(am__dirstamp)
src/common/libor-crypto.a: $(src_common_libor_crypto_a_OBJECTS) $(src_common_libor_crypto_a_DEPENDENCIES) $(EXTRA_src_common_libor_crypto_a_DEPENDENCIES) src/common/$(am__dirstamp)
	$(AM_V_at)-rm -f src/common/libor-crypto.a
	$(AM_V_AR)$(src_common_libor_crypto_a_AR) src/common/libor-crypto.a $(src_common_libor_crypto_a_OBJECTS) $(src_common_libor_crypto_a_LIBADD)
	$(AM_V_at)$(RANLIB) src/common/libor-crypto.a
src/common/compat_libevent.$(OBJEXT): src/common/$(am__dirstamp) \
	src/common/$(DEPDIR)/$(am__dirstamp)
src/common/libor-event.a: $(src_common_libor_event_a_OBJECTS) $(src_common_libor_event_a_DEPENDENCIES) $(EXTRA_src_common_libor_event_a_DEPENDENCIES) src/common/$(am__dirstamp)
	$(AM_V_at)-rm -f src/common/libor-event.a
	$(AM_V_AR)$(src_common_libor_event_a_AR) src/common/libor-event.a $(src_common_libor_event_a_OBJECTS) $(src_common_libor_event_a_LIBADD)
	$(AM_V_at)$(RANLIB) src/common/libor-event.a
src/common/address.$(OBJEXT): src/common/$(am__dirstamp) \
	src/common/$(DEPDIR)/$(am__dirstamp)
src/common/compat.$(OBJEXT): src/common/$(am__dirstamp) \
	src/common/$(DEPDIR)/$(am__dirstamp)
src/common/container.$(OBJEXT): src/common/$(am__dirstamp) \
	src/common/$(DEPDIR)/$(am__dirstamp)
src/common/di_ops.$(OBJEXT): src/common/$(am__dirstamp) \
	src/common/$(DEPDIR)/$(am__dirstamp)
src/common/log.$(OBJEXT): src/common/$(am__dirstamp) \
	src/common/$(DEPDIR)/$(am__dirstamp)
src/common/memarea.$(OBJEXT): src/common/$(am__dirstamp) \
	src/common/$(DEPDIR)/$(am__dirstamp)
src/common/mempool.$(OBJEXT): src/common/$(am__dirstamp) \
	src/common/$(DEPDIR)/$(am__dirstamp)
src/common/procmon.$(OBJEXT): src/common/$(am__dirstamp) \
	src/common/$(DEPDIR)/$(am__dirstamp)
src/common/util.$(OBJEXT): src/common/$(am__dirstamp) \
	src/common/$(DEPDIR)/$(am__dirstamp)
src/common/util_codedigest.$(OBJEXT): src/common/$(am__dirstamp) \
	src/common/$(DEPDIR)/$(am__dirstamp)
src/common/OpenBSD_malloc_Linux.$(OBJEXT): src/common/$(am__dirstamp) \
	src/common/$(DEPDIR)/$(am__dirstamp)
src/common/libor.a: $(src_common_libor_a_OBJECTS) $(src_common_libor_a_DEPENDENCIES) $(EXTRA_src_common_libor_a_DEPENDENCIES) src/common/$(am__dirstamp)
	$(AM_V_at)-rm -f src/common/libor.a
	$(AM_V_AR)$(src_common_libor_a_AR) src/common/libor.a $(src_common_libor_a_OBJECTS) $(src_common_libor_a_LIBADD)
	$(AM_V_at)$(RANLIB) src/common/libor.a
src/or/$(am__dirstamp):
	@$(MKDIR_P) src/or
	@: > src/or/$(am__dirstamp)
src/or/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/or/$(DEPDIR)
	@: > src/or/$(DEPDIR)/$(am__dirstamp)
src/or/buffers.$(OBJEXT): src/or/$(am__dirstamp) \
	src/or/$(DEPDIR)/$(am__dirstamp)
src/or/circuitbuild.$(OBJEXT): src/or/$(am__dirstamp) \
	src/or/$(DEPDIR)/$(am__dirstamp)
src/or/circuitlist.$(OBJEXT): src/or/$(am__dirstamp) \
	src/or/$(DEPDIR)/$(am__dirstamp)
src/or/circuituse.$(OBJEXT): src/or/$(am__dirstamp) \
	src/or/$(DEPDIR)/$(am__dirstamp)
src/or/command.$(OBJEXT): src/or/$(am__dirstamp) \
	src/or/$(DEPDIR)/$(am__dirstamp)
src/or/config.$(OBJEXT): src/or/$(am__dirstamp) \
	src/or/$(DEPDIR)/$(am__dirstamp)
src/or/confparse.$(OBJEXT): src/or/$(am__dirstamp) \
	src/or/$(DEPDIR)/$(am__dirstamp)
src/or/connection.$(OBJEXT): src/or/$(am__dirstamp) \
	src/or/$(DEPDIR)/$(am__dirstamp)
src/or/connection_edge.$(OBJEXT): src/or/$(am__dirstamp) \
	src/or/$(DEPDIR)/$(am__dirstamp)
src/or/connection_or.$(OBJEXT): src/or/$(am__dirstamp) \
	src/or/$(DEPDIR)/$(am__dirstamp)
src/or/control.$(OBJEXT): src/or/$(am__dirstamp) \
	src/or/$(DEPDIR)/$(am__dirstamp)
src/or/cpuworker.$(OBJEXT): src/or/$(am__dirstamp) \
	src/or/$(DEPDIR)/$(am__dirstamp)
src/or/directory.$(OBJEXT): src/or/$(am__dirstamp) \
	src/or/$(DEPDIR)/$(am__dirstamp)
src/or/dirserv.$(OBJEXT): src/or/$(am__dirstamp) \
	src/or/$(DEPDIR)/$(am__dirstamp)
src/or/dirvote.$(OBJEXT): src/or/$(am__dirstamp) \
	src/or/$(DEPDIR)/$(am__dirstamp)
src/or/dns.$(OBJEXT): src/or/$(am__dirstamp) \
	src/or/$(DEPDIR)/$(am__dirstamp)
src/or/dnsserv.$(OBJEXT): src/or/$(am__dirstamp) \
	src/or/$(DEPDIR)/$(am__dirstamp)
src/or/geoip.$(OBJEXT): src/or/$(am__dirstamp) \
	src/or/$(DEPDIR)/$(am__dirstamp)
src/or/hibernate.$(OBJEXT): src/or/$(am__dirstamp) \
	src/or/$(DEPDIR)/$(am__dirstamp)
src/or/main.$(OBJEXT): src/or/$(am__dirstamp) \
	src/or/$(DEPDIR)/$(am__dirstamp)
src/or/microdesc.$(OBJEXT): src/or/$(am__dirstamp) \
	src/or/$(DEPDIR)/$(am__dirstamp)
src/or/networkstatus.$(OBJEXT): src/or/$(am__dirstamp) \
	src/or/$(DEPDIR)/$(am__dirstamp)
src/or/nodelist.$(OBJEXT): src/or/$(am__dirstamp) \
	src/or/$(DEPDIR)/$(am__dirstamp)
src/or/onion.$(OBJEXT): src/or/$(am__dirstamp) \
	src/or/$(DEPDIR)/$(am__dirstamp)
src/or/transports.$(OBJEXT): src/or/$(am__dirstamp) \
	src/or/$(DEPDIR)/$(am__dirstamp)
src/or/policies.$(OBJEXT): src/or/$(am__dirstamp) \
	src/or/$(DEPDIR)/$(am__dirstamp)
src/or/reasons.$(OBJEXT): src/or/$(am__dirstamp) \
	src/or/$(DEPDIR)/$(am__dirstamp)
src/or/relay.$(OBJEXT): src/or/$(am__dirstamp) \
	src/or/$(DEPDIR)/$(am__dirstamp)
src/or/rendclient.$(OBJEXT): src/or/$(am__dirstamp) \
	src/or/$(DEPDIR)/$(am__dirstamp)
src/or/rendcommon.$(OBJEXT): src/or/$(am__dirstamp) \
	src/or/$(DEPDIR)/$(am__dirstamp)
src/or/rendmid.$(OBJEXT): src/or/$(am__dirstamp) \
	src/or/$(DEPDIR)/$(am__dirstamp)
src/or/rendservice.$(OBJEXT): src/or/$(am__dirstamp) \
	src/or/$(DEPDIR)/$(am__dirstamp)
src/or/rephist.$(OBJEXT): src/or/$(am__dirstamp) \
	src/or/$(DEPDIR)/$(am__dirstamp)
src/or/replaycache.$(OBJEXT): src/or/$(am__dirstamp) \
	src/or/$(DEPDIR)/$(am__dirstamp)
src/or/router.$(OBJEXT): src/or/$(am__dirstamp) \
	src/or/$(DEPDIR)/$(am__dirstamp)
src/or/routerlist.$(OBJEXT): src/or/$(am__dirstamp) \
	src/or/$(DEPDIR)/$(am__dirstamp)
src/or/routerparse.$(OBJEXT): src/or/$(am__dirstamp) \
	src/or/$(DEPDIR)/$(am__dirstamp)
src/or/routerset.$(OBJEXT): src/or/$(am__dirstamp) \
	src/or/$(DEPDIR)/$(am__dirstamp)
src/or/statefile.$(OBJEXT): src/or/$(am__dirstamp) \
	src/or/$(DEPDIR)/$(am__dirstamp)
src/or/status.$(OBJEXT): src/or/$(am__dirstamp) \
	src/or/$(DEPDIR)/$(am__dirstamp)
src/or/eventdns.$(OBJEXT): src/or/$(am__dirstamp) \
	src/or/$(DEPDIR)/$(am__dirstamp)
src/or/ntmain.$(OBJEXT): src/or/$(am__dirstamp) \
	src/or/$(DEPDIR)/$(am__dirstamp)
src/or/config_codedigest.$(OBJEXT): src/or/$(am__dirstamp) \
	src/or/$(DEPDIR)/$(am__dirstamp)
src/or/libtor.a: $(src_or_libtor_a_OBJECTS) $(src_or_libtor_a_DEPENDENCIES) $(EXTRA_src_or_libtor_a_DEPENDENCIES) src/or/$(am__dirstamp)
	$(AM_V_at)-rm -f src/or/libtor.a
	$(AM_V_AR)$(src_or_libtor_a_AR) src/or/libtor.a $(src_or_libtor_a_OBJECTS) $(src_or_libtor_a_LIBADD)
	$(AM_V_at)$(RANLIB) src/or/libtor.a
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)

clean-noinstPROGRAMS:
	-test -z "$(noinst_PROGRAMS)" || rm -f $(noinst_PROGRAMS)
src/or/tor_main.$(OBJEXT): src/or/$(am__dirstamp) \
	src/or/$(DEPDIR)/$(am__dirstamp)
src/or/tor$(EXEEXT): $(src_or_tor_OBJECTS) $(src_or_tor_DEPENDENCIES) $(EXTRA_src_or_tor_DEPENDENCIES) src/or/$(am__dirstamp)
	@rm -f src/or/tor$(EXEEXT)
	$(AM_V_CCLD)$(src_or_tor_LINK) $(src_or_tor_OBJECTS) $(src_or_tor_LDADD) $(LIBS)
src/test/$(am__dirstamp):
	@$(MKDIR_P) src/test
	@: > src/test/$(am__dirstamp)
src/test/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/test/$(DEPDIR)
	@: > src/test/$(DEPDIR)/$(am__dirstamp)
src/test/src_test_bench-bench.$(OBJEXT): src/test/$(am__dirstamp) \
	src/test/$(DEPDIR)/$(am__dirstamp)
src/test/bench$(EXEEXT): $(src_test_bench_OBJECTS) $(src_test_bench_DEPENDENCIES) $(EXTRA_src_test_bench_DEPENDENCIES) src/test/$(am__dirstamp)
	@rm -f src/test/bench$(EXEEXT)
	$(AM_V_CCLD)$(src_test_bench_LINK) $(src_test_bench_OBJECTS) $(src_test_bench_LDADD) $(LIBS)
src/test/src_test_test-test.$(OBJEXT): src/test/$(am__dirstamp) \
	src/test/$(DEPDIR)/$(am__dirstamp)
src/test/src_test_test-test_addr.$(OBJEXT): src/test/$(am__dirstamp) \
	src/test/$(DEPDIR)/$(am__dirstamp)
src/test/src_test_test-test_containers.$(OBJEXT):  \
	src/test/$(am__dirstamp) src/test/$(DEPDIR)/$(am__dirstamp)
src/test/src_test_test-test_crypto.$(OBJEXT):  \
	src/test/$(am__dirstamp) src/test/$(DEPDIR)/$(am__dirstamp)
src/test/src_test_test-test_data.$(OBJEXT): src/test/$(am__dirstamp) \
	src/test/$(DEPDIR)/$(am__dirstamp)
src/test/src_test_test-test_dir.$(OBJEXT): src/test/$(am__dirstamp) \
	src/test/$(DEPDIR)/$(am__dirstamp)
src/test/src_test_test-test_introduce.$(OBJEXT):  \
	src/test/$(am__dirstamp) src/test/$(DEPDIR)/$(am__dirstamp)
src/test/src_test_test-test_microdesc.$(OBJEXT):  \
	src/test/$(am__dirstamp) src/test/$(DEPDIR)/$(am__dirstamp)
src/test/src_test_test-test_pt.$(OBJEXT): src/test/$(am__dirstamp) \
	src/test/$(DEPDIR)/$(am__dirstamp)
src/test/src_test_test-test_replay.$(OBJEXT):  \
	src/test/$(am__dirstamp) src/test/$(DEPDIR)/$(am__dirstamp)
src/test/src_test_test-test_util.$(OBJEXT): src/test/$(am__dirstamp) \
	src/test/$(DEPDIR)/$(am__dirstamp)
src/test/src_test_test-test_config.$(OBJEXT):  \
	src/test/$(am__dirstamp) src/test/$(DEPDIR)/$(am__dirstamp)
src/test/src_test_test-tinytest.$(OBJEXT): src/test/$(am__dirstamp) \
	src/test/$(DEPDIR)/$(am__dirstamp)
src/test/test$(EXEEXT): $(src_test_test_OBJECTS) $(src_test_test_DEPENDENCIES) $(EXTRA_src_test_test_DEPENDENCIES) src/test/$(am__dirstamp)
	@rm -f src/test/test$(EXEEXT)
	$(AM_V_CCLD)$(src_test_test_LINK) $(src_test_test_OBJECTS) $(src_test_test_LDADD) $(LIBS)
src/test/test-child.$(OBJEXT): src/test/$(am__dirstamp) \
	src/test/$(DEPDIR)/$(am__dirstamp)
src/test/test-child$(EXEEXT): $(src_test_test_child_OBJECTS) $(src_test_test_child_DEPENDENCIES) $(EXTRA_src_test_test_child_DEPENDENCIES) src/test/$(am__dirstamp)
	@rm -f src/test/test-child$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(src_test_test_child_OBJECTS) $(src_test_test_child_LDADD) $(LIBS)
src/tools/$(am__dirstamp):
	@$(MKDIR_P) src/tools
	@: > src/tools/$(am__dirstamp)
src/tools/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/tools/$(DEPDIR)
	@: > src/tools/$(DEPDIR)/$(am__dirstamp)
src/tools/tor-checkkey.$(OBJEXT): src/tools/$(am__dirstamp) \
	src/tools/$(DEPDIR)/$(am__dirstamp)
src/tools/tor-checkkey$(EXEEXT): $(src_tools_tor_checkkey_OBJECTS) $(src_tools_tor_checkkey_DEPENDENCIES) $(EXTRA_src_tools_tor_checkkey_DEPENDENCIES) src/tools/$(am__dirstamp)
	@rm -f src/tools/tor-checkkey$(EXEEXT)
	$(AM_V_CCLD)$(src_tools_tor_checkkey_LINK) $(src_tools_tor_checkkey_OBJECTS) $(src_tools_tor_checkkey_LDADD) $(LIBS)
src/tools/tor-fw-helper/$(am__dirstamp):
	@$(MKDIR_P) src/tools/tor-fw-helper
	@: > src/tools/tor-fw-helper/$(am__dirstamp)
src/tools/tor-fw-helper/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/tools/tor-fw-helper/$(DEPDIR)
	@: > src/tools/tor-fw-helper/$(DEPDIR)/$(am__dirstamp)
src/tools/tor-fw-helper/src_tools_tor_fw_helper_tor_fw_helper-tor-fw-helper.$(OBJEXT):  \
	src/tools/tor-fw-helper/$(am__dirstamp) \
	src/tools/tor-fw-helper/$(DEPDIR)/$(am__dirstamp)
src/tools/tor-fw-helper/src_tools_tor_fw_helper_tor_fw_helper-tor-fw-helper-natpmp.$(OBJEXT):  \
	src/tools/tor-fw-helper/$(am__dirstamp) \
	src/tools/tor-fw-helper/$(DEPDIR)/$(am__dirstamp)
src/tools/tor-fw-helper/src_tools_tor_fw_helper_tor_fw_helper-tor-fw-helper-upnp.$(OBJEXT):  \
	src/tools/tor-fw-helper/$(am__dirstamp) \
	src/tools/tor-fw-helper/$(DEPDIR)/$(am__dirstamp)
src/tools/tor-fw-helper/tor-fw-helper$(EXEEXT): $(src_tools_tor_fw_helper_tor_fw_helper_OBJECTS) $(src_tools_tor_fw_helper_tor_fw_helper_DEPENDENCIES) $(EXTRA_src_tools_tor_fw_helper_tor_fw_helper_DEPENDENCIES) src/tools/tor-fw-helper/$(am__dirstamp)
	@rm -f src/tools/tor-fw-helper/tor-fw-helper$(EXEEXT)
	$(AM_V_CCLD)$(src_tools_tor_fw_helper_tor_fw_helper_LINK) $(src_tools_tor_fw_helper_tor_fw_helper_OBJECTS) $(src_tools_tor_fw_helper_tor_fw_helper_LDADD) $(LIBS)
src/tools/tor-gencert.$(OBJEXT): src/tools/$(am__dirstamp) \
	src/tools/$(DEPDIR)/$(am__dirstamp)
src/tools/tor-gencert$(EXEEXT): $(src_tools_tor_gencert_OBJECTS) $(src_tools_tor_gencert_DEPENDENCIES) $(EXTRA_src_tools_tor_gencert_DEPENDENCIES) src/tools/$(am__dirstamp)
	@rm -f src/tools/tor-gencert$(EXEEXT)
	$(AM_V_CCLD)$(src_tools_tor_gencert_LINK) $(src_tools_tor_gencert_OBJECTS) $(src_tools_tor_gencert_LDADD) $(LIBS)
src/tools/tor-resolve.$(OBJEXT): src/tools/$(am__dirstamp) \
	src/tools/$(DEPDIR)/$(am__dirstamp)
src/tools/tor-resolve$(EXEEXT): $(src_tools_tor_resolve_OBJECTS) $(src_tools_tor_resolve_DEPENDENCIES) $(EXTRA_src_tools_tor_resolve_DEPENDENCIES) src/tools/$(am__dirstamp)
	@rm -f src/tools/tor-resolve$(EXEEXT)
	$(AM_V_CCLD)$(src_tools_tor_resolve_LINK) $(src_tools_tor_resolve_OBJECTS) $(src_tools_tor_resolve_LDADD) $(LIBS)
install-binSCRIPTS: $(bin_SCRIPTS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_SCRIPTS)'; test -n "$(bindir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if test -f "$$d$$p"; then echo "$$d$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n' \
	    -e 'h;s|.*|.|' \
	    -e 'p;x;s,.*/,,;$(transform)' | sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1; } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) { files[d] = files[d] " " $$1; \
	      if (++n[d] == $(am__install_max)) { \
		print "f", d, files[d]; n[d] = 0; files[d] = "" } } \
	    else { print "f", d "/" $$4, $$1 } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	     if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	     test -z "$$files" || { \
	       echo " $(INSTALL_SCRIPT) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	       $(INSTALL_SCRIPT) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	     } \
	; done

uninstall-binSCRIPTS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_SCRIPTS)'; test -n "$(bindir)" || exit 0; \
	files=`for p in $$list; do echo "$$p"; done | \
	       sed -e 's,.*/,,;$(transform)'`; \
	dir='$(DESTDIR)$(bindir)'; $(am__uninstall_files_from_dir)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f src/common/OpenBSD_malloc_Linux.$(OBJEXT)
	-rm -f src/common/address.$(OBJEXT)
	-rm -f src/common/aes.$(OBJEXT)
	-rm -f src/common/compat.$(OBJEXT)
	-rm -f src/common/compat_libevent.$(OBJEXT)
	-rm -f src/common/container.$(OBJEXT)
	-rm -f src/common/crypto.$(OBJEXT)
	-rm -f src/common/di_ops.$(OBJEXT)
	-rm -f src/common/log.$(OBJEXT)
	-rm -f src/common/memarea.$(OBJEXT)
	-rm -f src/common/mempool.$(OBJEXT)
	-rm -f src/common/procmon.$(OBJEXT)
	-rm -f src/common/torgzip.$(OBJEXT)
	-rm -f src/common/tortls.$(OBJEXT)
	-rm -f src/common/util.$(OBJEXT)
	-rm -f src/common/util_codedigest.$(OBJEXT)
	-rm -f src/or/buffers.$(OBJEXT)
	-rm -f src/or/circuitbuild.$(OBJEXT)
	-rm -f src/or/circuitlist.$(OBJEXT)
	-rm -f src/or/circuituse.$(OBJEXT)
	-rm -f src/or/command.$(OBJEXT)
	-rm -f src/or/config.$(OBJEXT)
	-rm -f src/or/config_codedigest.$(OBJEXT)
	-rm -f src/or/confparse.$(OBJEXT)
	-rm -f src/or/connection.$(OBJEXT)
	-rm -f src/or/connection_edge.$(OBJEXT)
	-rm -f src/or/connection_or.$(OBJEXT)
	-rm -f src/or/control.$(OBJEXT)
	-rm -f src/or/cpuworker.$(OBJEXT)
	-rm -f src/or/directory.$(OBJEXT)
	-rm -f src/or/dirserv.$(OBJEXT)
	-rm -f src/or/dirvote.$(OBJEXT)
	-rm -f src/or/dns.$(OBJEXT)
	-rm -f src/or/dnsserv.$(OBJEXT)
	-rm -f src/or/eventdns.$(OBJEXT)
	-rm -f src/or/geoip.$(OBJEXT)
	-rm -f src/or/hibernate.$(OBJEXT)
	-rm -f src/or/main.$(OBJEXT)
	-rm -f src/or/microdesc.$(OBJEXT)
	-rm -f src/or/networkstatus.$(OBJEXT)
	-rm -f src/or/nodelist.$(OBJEXT)
	-rm -f src/or/ntmain.$(OBJEXT)
	-rm -f src/or/onion.$(OBJEXT)
	-rm -f src/or/policies.$(OBJEXT)
	-rm -f src/or/reasons.$(OBJEXT)
	-rm -f src/or/relay.$(OBJEXT)
	-rm -f src/or/rendclient.$(OBJEXT)
	-rm -f src/or/rendcommon.$(OBJEXT)
	-rm -f src/or/rendmid.$(OBJEXT)
	-rm -f src/or/rendservice.$(OBJEXT)
	-rm -f src/or/rephist.$(OBJEXT)
	-rm -f src/or/replaycache.$(OBJEXT)
	-rm -f src/or/router.$(OBJEXT)
	-rm -f src/or/routerlist.$(OBJEXT)
	-rm -f src/or/routerparse.$(OBJEXT)
	-rm -f src/or/routerset.$(OBJEXT)
	-rm -f src/or/statefile.$(OBJEXT)
	-rm -f src/or/status.$(OBJEXT)
	-rm -f src/or/tor_main.$(OBJEXT)
	-rm -f src/or/transports.$(OBJEXT)
	-rm -f src/test/src_test_bench-bench.$(OBJEXT)
	-rm -f src/test/src_test_test-test.$(OBJEXT)
	-rm -f src/test/src_test_test-test_addr.$(OBJEXT)
	-rm -f src/test/src_test_test-test_config.$(OBJEXT)
	-rm -f src/test/src_test_test-test_containers.$(OBJEXT)
	-rm -f src/test/src_test_test-test_crypto.$(OBJEXT)
	-rm -f src/test/src_test_test-test_data.$(OBJEXT)
	-rm -f src/test/src_test_test-test_dir.$(OBJEXT)
	-rm -f src/test/src_test_test-test_introduce.$(OBJEXT)
	-rm -f src/test/src_test_test-test_microdesc.$(OBJEXT)
	-rm -f src/test/src_test_test-test_pt.$(OBJEXT)
	-rm -f src/test/src_test_test-test_replay.$(OBJEXT)
	-rm -f src/test/src_test_test-test_util.$(OBJEXT)
	-rm -f src/test/src_test_test-tinytest.$(OBJEXT)
	-rm -f src/test/test-child.$(OBJEXT)
	-rm -f src/tools/tor-checkkey.$(OBJEXT)
	-rm -f src/tools/tor-fw-helper/src_tools_tor_fw_helper_tor_fw_helper-tor-fw-helper-natpmp.$(OBJEXT)
	-rm -f src/tools/tor-fw-helper/src_tools_tor_fw_helper_tor_fw_helper-tor-fw-helper-upnp.$(OBJEXT)
	-rm -f src/tools/tor-fw-helper/src_tools_tor_fw_helper_tor_fw_helper-tor-fw-helper.$(OBJEXT)
	-rm -f src/tools/tor-gencert.$(OBJEXT)
	-rm -f src/tools/tor-resolve.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include src/common/$(DEPDIR)/OpenBSD_malloc_Linux.Po
include src/common/$(DEPDIR)/address.Po
include src/common/$(DEPDIR)/aes.Po
include src/common/$(DEPDIR)/compat.Po
include src/common/$(DEPDIR)/compat_libevent.Po
include src/common/$(DEPDIR)/container.Po
include src/common/$(DEPDIR)/crypto.Po
include src/common/$(DEPDIR)/di_ops.Po
include src/common/$(DEPDIR)/log.Po
include src/common/$(DEPDIR)/memarea.Po
include src/common/$(DEPDIR)/mempool.Po
include src/common/$(DEPDIR)/procmon.Po
include src/common/$(DEPDIR)/torgzip.Po
include src/common/$(DEPDIR)/tortls.Po
include src/common/$(DEPDIR)/util.Po
include src/common/$(DEPDIR)/util_codedigest.Po
include src/or/$(DEPDIR)/buffers.Po
include src/or/$(DEPDIR)/circuitbuild.Po
include src/or/$(DEPDIR)/circuitlist.Po
include src/or/$(DEPDIR)/circuituse.Po
include src/or/$(DEPDIR)/command.Po
include src/or/$(DEPDIR)/config.Po
include src/or/$(DEPDIR)/config_codedigest.Po
include src/or/$(DEPDIR)/confparse.Po
include src/or/$(DEPDIR)/connection.Po
include src/or/$(DEPDIR)/connection_edge.Po
include src/or/$(DEPDIR)/connection_or.Po
include src/or/$(DEPDIR)/control.Po
include src/or/$(DEPDIR)/cpuworker.Po
include src/or/$(DEPDIR)/directory.Po
include src/or/$(DEPDIR)/dirserv.Po
include src/or/$(DEPDIR)/dirvote.Po
include src/or/$(DEPDIR)/dns.Po
include src/or/$(DEPDIR)/dnsserv.Po
include src/or/$(DEPDIR)/eventdns.Po
include src/or/$(DEPDIR)/geoip.Po
include src/or/$(DEPDIR)/hibernate.Po
include src/or/$(DEPDIR)/main.Po
include src/or/$(DEPDIR)/microdesc.Po
include src/or/$(DEPDIR)/networkstatus.Po
include src/or/$(DEPDIR)/nodelist.Po
include src/or/$(DEPDIR)/ntmain.Po
include src/or/$(DEPDIR)/onion.Po
include src/or/$(DEPDIR)/policies.Po
include src/or/$(DEPDIR)/reasons.Po
include src/or/$(DEPDIR)/relay.Po
include src/or/$(DEPDIR)/rendclient.Po
include src/or/$(DEPDIR)/rendcommon.Po
include src/or/$(DEPDIR)/rendmid.Po
include src/or/$(DEPDIR)/rendservice.Po
include src/or/$(DEPDIR)/rephist.Po
include src/or/$(DEPDIR)/replaycache.Po
include src/or/$(DEPDIR)/router.Po
include src/or/$(DEPDIR)/routerlist.Po
include src/or/$(DEPDIR)/routerparse.Po
include src/or/$(DEPDIR)/routerset.Po
include src/or/$(DEPDIR)/statefile.Po
include src/or/$(DEPDIR)/status.Po
include src/or/$(DEPDIR)/tor_main.Po
include src/or/$(DEPDIR)/transports.Po
include src/test/$(DEPDIR)/src_test_bench-bench.Po
include src/test/$(DEPDIR)/src_test_test-test.Po
include src/test/$(DEPDIR)/src_test_test-test_addr.Po
include src/test/$(DEPDIR)/src_test_test-test_config.Po
include src/test/$(DEPDIR)/src_test_test-test_containers.Po
include src/test/$(DEPDIR)/src_test_test-test_crypto.Po
include src/test/$(DEPDIR)/src_test_test-test_data.Po
include src/test/$(DEPDIR)/src_test_test-test_dir.Po
include src/test/$(DEPDIR)/src_test_test-test_introduce.Po
include src/test/$(DEPDIR)/src_test_test-test_microdesc.Po
include src/test/$(DEPDIR)/src_test_test-test_pt.Po
include src/test/$(DEPDIR)/src_test_test-test_replay.Po
include src/test/$(DEPDIR)/src_test_test-test_util.Po
include src/test/$(DEPDIR)/src_test_test-tinytest.Po
include src/test/$(DEPDIR)/test-child.Po
include src/tools/$(DEPDIR)/tor-checkkey.Po
include src/tools/$(DEPDIR)/tor-gencert.Po
include src/tools/$(DEPDIR)/tor-resolve.Po
include src/tools/tor-fw-helper/$(DEPDIR)/src_tools_tor_fw_helper_tor_fw_helper-tor-fw-helper-natpmp.Po
include src/tools/tor-fw-helper/$(DEPDIR)/src_tools_tor_fw_helper_tor_fw_helper-tor-fw-helper-upnp.Po
include src/tools/tor-fw-helper/$(DEPDIR)/src_tools_tor_fw_helper_tor_fw_helper-tor-fw-helper.Po

.c.o:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

src/test/src_test_bench-bench.o: src/test/bench.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_test_bench_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT src/test/src_test_bench-bench.o -MD -MP -MF src/test/$(DEPDIR)/src_test_bench-bench.Tpo -c -o src/test/src_test_bench-bench.o `test -f 'src/test/bench.c' || echo '$(srcdir)/'`src/test/bench.c
	$(AM_V_at)$(am__mv) src/test/$(DEPDIR)/src_test_bench-bench.Tpo src/test/$(DEPDIR)/src_test_bench-bench.Po
#	$(AM_V_CC)source='src/test/bench.c' object='src/test/src_test_bench-bench.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_test_bench_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o src/test/src_test_bench-bench.o `test -f 'src/test/bench.c' || echo '$(srcdir)/'`src/test/bench.c

src/test/src_test_bench-bench.obj: src/test/bench.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_test_bench_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT src/test/src_test_bench-bench.obj -MD -MP -MF src/test/$(DEPDIR)/src_test_bench-bench.Tpo -c -o src/test/src_test_bench-bench.obj `if test -f 'src/test/bench.c'; then $(CYGPATH_W) 'src/test/bench.c'; else $(CYGPATH_W) '$(srcdir)/src/test/bench.c'; fi`
	$(AM_V_at)$(am__mv) src/test/$(DEPDIR)/src_test_bench-bench.Tpo src/test/$(DEPDIR)/src_test_bench-bench.Po
#	$(AM_V_CC)source='src/test/bench.c' object='src/test/src_test_bench-bench.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_test_bench_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o src/test/src_test_bench-bench.obj `if test -f 'src/test/bench.c'; then $(CYGPATH_W) 'src/test/bench.c'; else $(CYGPATH_W) '$(srcdir)/src/test/bench.c'; fi`

src/test/src_test_test-test.o: src/test/test.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_test_test_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT src/test/src_test_test-test.o -MD -MP -MF src/test/$(DEPDIR)/src_test_test-test.Tpo -c -o src/test/src_test_test-test.o `test -f 'src/test/test.c' || echo '$(srcdir)/'`src/test/test.c
	$(AM_V_at)$(am__mv) src/test/$(DEPDIR)/src_test_test-test.Tpo src/test/$(DEPDIR)/src_test_test-test.Po
#	$(AM_V_CC)source='src/test/test.c' object='src/test/src_test_test-test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_test_test_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o src/test/src_test_test-test.o `test -f 'src/test/test.c' || echo '$(srcdir)/'`src/test/test.c

src/test/src_test_test-test.obj: src/test/test.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_test_test_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT src/test/src_test_test-test.obj -MD -MP -MF src/test/$(DEPDIR)/src_test_test-test.Tpo -c -o src/test/src_test_test-test.obj `if test -f 'src/test/test.c'; then $(CYGPATH_W) 'src/test/test.c'; else $(CYGPATH_W) '$(srcdir)/src/test/test.c'; fi`
	$(AM_V_at)$(am__mv) src/test/$(DEPDIR)/src_test_test-test.Tpo src/test/$(DEPDIR)/src_test_test-test.Po
#	$(AM_V_CC)source='src/test/test.c' object='src/test/src_test_test-test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_test_test_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o src/test/src_test_test-test.obj `if test -f 'src/test/test.c'; then $(CYGPATH_W) 'src/test/test.c'; else $(CYGPATH_W) '$(srcdir)/src/test/test.c'; fi`

src/test/src_test_test-test_addr.o: src/test/test_addr.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_test_test_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT src/test/src_test_test-test_addr.o -MD -MP -MF src/test/$(DEPDIR)/src_test_test-test_addr.Tpo -c -o src/test/src_test_test-test_addr.o `test -f 'src/test/test_addr.c' || echo '$(srcdir)/'`src/test/test_addr.c
	$(AM_V_at)$(am__mv) src/test/$(DEPDIR)/src_test_test-test_addr.Tpo src/test/$(DEPDIR)/src_test_test-test_addr.Po
#	$(AM_V_CC)source='src/test/test_addr.c' object='src/test/src_test_test-test_addr.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_test_test_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o src/test/src_test_test-test_addr.o `test -f 'src/test/test_addr.c' || echo '$(srcdir)/'`src/test/test_addr.c

src/test/src_test_test-test_addr.obj: src/test/test_addr.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_test_test_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT src/test/src_test_test-test_addr.obj -MD -MP -MF src/test/$(DEPDIR)/src_test_test-test_addr.Tpo -c -o src/test/src_test_test-test_addr.obj `if test -f 'src/test/test_addr.c'; then $(CYGPATH_W) 'src/test/test_addr.c'; else $(CYGPATH_W) '$(srcdir)/src/test/test_addr.c'; fi`
	$(AM_V_at)$(am__mv) src/test/$(DEPDIR)/src_test_test-test_addr.Tpo src/test/$(DEPDIR)/src_test_test-test_addr.Po
#	$(AM_V_CC)source='src/test/test_addr.c' object='src/test/src_test_test-test_addr.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_test_test_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o src/test/src_test_test-test_addr.obj `if test -f 'src/test/test_addr.c'; then $(CYGPATH_W) 'src/test/test_addr.c'; else $(CYGPATH_W) '$(srcdir)/src/test/test_addr.c'; fi`

src/test/src_test_test-test_containers.o: src/test/test_containers.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_test_test_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT src/test/src_test_test-test_containers.o -MD -MP -MF src/test/$(DEPDIR)/src_test_test-test_containers.Tpo -c -o src/test/src_test_test-test_containers.o `test -f 'src/test/test_containers.c' || echo '$(srcdir)/'`src/test/test_containers.c
	$(AM_V_at)$(am__mv) src/test/$(DEPDIR)/src_test_test-test_containers.Tpo src/test/$(DEPDIR)/src_test_test-test_containers.Po
#	$(AM_V_CC)source='src/test/test_containers.c' object='src/test/src_test_test-test_containers.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_test_test_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o src/test/src_test_test-test_containers.o `test -f 'src/test/test_containers.c' || echo '$(srcdir)/'`src/test/test_containers.c

src/test/src_test_test-test_containers.obj: src/test/test_containers.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_test_test_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT src/test/src_test_test-test_containers.obj -MD -MP -MF src/test/$(DEPDIR)/src_test_test-test_containers.Tpo -c -o src/test/src_test_test-test_containers.obj `if test -f 'src/test/test_containers.c'; then $(CYGPATH_W) 'src/test/test_containers.c'; else $(CYGPATH_W) '$(srcdir)/src/test/test_containers.c'; fi`
	$(AM_V_at)$(am__mv) src/test/$(DEPDIR)/src_test_test-test_containers.Tpo src/test/$(DEPDIR)/src_test_test-test_containers.Po
#	$(AM_V_CC)source='src/test/test_containers.c' object='src/test/src_test_test-test_containers.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_test_test_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o src/test/src_test_test-test_containers.obj `if test -f 'src/test/test_containers.c'; then $(CYGPATH_W) 'src/test/test_containers.c'; else $(CYGPATH_W) '$(srcdir)/src/test/test_containers.c'; fi`

src/test/src_test_test-test_crypto.o: src/test/test_crypto.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_test_test_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT src/test/src_test_test-test_crypto.o -MD -MP -MF src/test/$(DEPDIR)/src_test_test-test_crypto.Tpo -c -o src/test/src_test_test-test_crypto.o `test -f 'src/test/test_crypto.c' || echo '$(srcdir)/'`src/test/test_crypto.c
	$(AM_V_at)$(am__mv) src/test/$(DEPDIR)/src_test_test-test_crypto.Tpo src/test/$(DEPDIR)/src_test_test-test_crypto.Po
#	$(AM_V_CC)source='src/test/test_crypto.c' object='src/test/src_test_test-test_crypto.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_test_test_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o src/test/src_test_test-test_crypto.o `test -f 'src/test/test_crypto.c' || echo '$(srcdir)/'`src/test/test_crypto.c

src/test/src_test_test-test_crypto.obj: src/test/test_crypto.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_test_test_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT src/test/src_test_test-test_crypto.obj -MD -MP -MF src/test/$(DEPDIR)/src_test_test-test_crypto.Tpo -c -o src/test/src_test_test-test_crypto.obj `if test -f 'src/test/test_crypto.c'; then $(CYGPATH_W) 'src/test/test_crypto.c'; else $(CYGPATH_W) '$(srcdir)/src/test/test_crypto.c'; fi`
	$(AM_V_at)$(am__mv) src/test/$(DEPDIR)/src_test_test-test_crypto.Tpo src/test/$(DEPDIR)/src_test_test-test_crypto.Po
#	$(AM_V_CC)source='src/test/test_crypto.c' object='src/test/src_test_test-test_crypto.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_test_test_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o src/test/src_test_test-test_crypto.obj `if test -f 'src/test/test_crypto.c'; then $(CYGPATH_W) 'src/test/test_crypto.c'; else $(CYGPATH_W) '$(srcdir)/src/test/test_crypto.c'; fi`

src/test/src_test_test-test_data.o: src/test/test_data.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_test_test_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT src/test/src_test_test-test_data.o -MD -MP -MF src/test/$(DEPDIR)/src_test_test-test_data.Tpo -c -o src/test/src_test_test-test_data.o `test -f 'src/test/test_data.c' || echo '$(srcdir)/'`src/test/test_data.c
	$(AM_V_at)$(am__mv) src/test/$(DEPDIR)/src_test_test-test_data.Tpo src/test/$(DEPDIR)/src_test_test-test_data.Po
#	$(AM_V_CC)source='src/test/test_data.c' object='src/test/src_test_test-test_data.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_test_test_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o src/test/src_test_test-test_data.o `test -f 'src/test/test_data.c' || echo '$(srcdir)/'`src/test/test_data.c

src/test/src_test_test-test_data.obj: src/test/test_data.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_test_test_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT src/test/src_test_test-test_data.obj -MD -MP -MF src/test/$(DEPDIR)/src_test_test-test_data.Tpo -c -o src/test/src_test_test-test_data.obj `if test -f 'src/test/test_data.c'; then $(CYGPATH_W) 'src/test/test_data.c'; else $(CYGPATH_W) '$(srcdir)/src/test/test_data.c'; fi`
	$(AM_V_at)$(am__mv) src/test/$(DEPDIR)/src_test_test-test_data.Tpo src/test/$(DEPDIR)/src_test_test-test_data.Po
#	$(AM_V_CC)source='src/test/test_data.c' object='src/test/src_test_test-test_data.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_test_test_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o src/test/src_test_test-test_data.obj `if test -f 'src/test/test_data.c'; then $(CYGPATH_W) 'src/test/test_data.c'; else $(CYGPATH_W) '$(srcdir)/src/test/test_data.c'; fi`

src/test/src_test_test-test_dir.o: src/test/test_dir.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_test_test_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT src/test/src_test_test-test_dir.o -MD -MP -MF src/test/$(DEPDIR)/src_test_test-test_dir.Tpo -c -o src/test/src_test_test-test_dir.o `test -f 'src/test/test_dir.c' || echo '$(srcdir)/'`src/test/test_dir.c
	$(AM_V_at)$(am__mv) src/test/$(DEPDIR)/src_test_test-test_dir.Tpo src/test/$(DEPDIR)/src_test_test-test_dir.Po
#	$(AM_V_CC)source='src/test/test_dir.c' object='src/test/src_test_test-test_dir.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_test_test_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o src/test/src_test_test-test_dir.o `test -f 'src/test/test_dir.c' || echo '$(srcdir)/'`src/test/test_dir.c

src/test/src_test_test-test_dir.obj: src/test/test_dir.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_test_test_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT src/test/src_test_test-test_dir.obj -MD -MP -MF src/test/$(DEPDIR)/src_test_test-test_dir.Tpo -c -o src/test/src_test_test-test_dir.obj `if test -f 'src/test/test_dir.c'; then $(CYGPATH_W) 'src/test/test_dir.c'; else $(CYGPATH_W) '$(srcdir)/src/test/test_dir.c'; fi`
	$(AM_V_at)$(am__mv) src/test/$(DEPDIR)/src_test_test-test_dir.Tpo src/test/$(DEPDIR)/src_test_test-test_dir.Po
#	$(AM_V_CC)source='src/test/test_dir.c' object='src/test/src_test_test-test_dir.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_test_test_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o src/test/src_test_test-test_dir.obj `if test -f 'src/test/test_dir.c'; then $(CYGPATH_W) 'src/test/test_dir.c'; else $(CYGPATH_W) '$(srcdir)/src/test/test_dir.c'; fi`

src/test/src_test_test-test_introduce.o: src/test/test_introduce.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_test_test_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT src/test/src_test_test-test_introduce.o -MD -MP -MF src/test/$(DEPDIR)/src_test_test-test_introduce.Tpo -c -o src/test/src_test_test-test_introduce.o `test -f 'src/test/test_introduce.c' || echo '$(srcdir)/'`src/test/test_introduce.c
	$(AM_V_at)$(am__mv) src/test/$(DEPDIR)/src_test_test-test_introduce.Tpo src/test/$(DEPDIR)/src_test_test-test_introduce.Po
#	$(AM_V_CC)source='src/test/test_introduce.c' object='src/test/src_test_test-test_introduce.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_test_test_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o src/test/src_test_test-test_introduce.o `test -f 'src/test/test_introduce.c' || echo '$(srcdir)/'`src/test/test_introduce.c

src/test/src_test_test-test_introduce.obj: src/test/test_introduce.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_test_test_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT src/test/src_test_test-test_introduce.obj -MD -MP -MF src/test/$(DEPDIR)/src_test_test-test_introduce.Tpo -c -o src/test/src_test_test-test_introduce.obj `if test -f 'src/test/test_introduce.c'; then $(CYGPATH_W) 'src/test/test_introduce.c'; else $(CYGPATH_W) '$(srcdir)/src/test/test_introduce.c'; fi`
	$(AM_V_at)$(am__mv) src/test/$(DEPDIR)/src_test_test-test_introduce.Tpo src/test/$(DEPDIR)/src_test_test-test_introduce.Po
#	$(AM_V_CC)source='src/test/test_introduce.c' object='src/test/src_test_test-test_introduce.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_test_test_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o src/test/src_test_test-test_introduce.obj `if test -f 'src/test/test_introduce.c'; then $(CYGPATH_W) 'src/test/test_introduce.c'; else $(CYGPATH_W) '$(srcdir)/src/test/test_introduce.c'; fi`

src/test/src_test_test-test_microdesc.o: src/test/test_microdesc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_test_test_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT src/test/src_test_test-test_microdesc.o -MD -MP -MF src/test/$(DEPDIR)/src_test_test-test_microdesc.Tpo -c -o src/test/src_test_test-test_microdesc.o `test -f 'src/test/test_microdesc.c' || echo '$(srcdir)/'`src/test/test_microdesc.c
	$(AM_V_at)$(am__mv) src/test/$(DEPDIR)/src_test_test-test_microdesc.Tpo src/test/$(DEPDIR)/src_test_test-test_microdesc.Po
#	$(AM_V_CC)source='src/test/test_microdesc.c' object='src/test/src_test_test-test_microdesc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_test_test_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o src/test/src_test_test-test_microdesc.o `test -f 'src/test/test_microdesc.c' || echo '$(srcdir)/'`src/test/test_microdesc.c

src/test/src_test_test-test_microdesc.obj: src/test/test_microdesc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_test_test_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT src/test/src_test_test-test_microdesc.obj -MD -MP -MF src/test/$(DEPDIR)/src_test_test-test_microdesc.Tpo -c -o src/test/src_test_test-test_microdesc.obj `if test -f 'src/test/test_microdesc.c'; then $(CYGPATH_W) 'src/test/test_microdesc.c'; else $(CYGPATH_W) '$(srcdir)/src/test/test_microdesc.c'; fi`
	$(AM_V_at)$(am__mv) src/test/$(DEPDIR)/src_test_test-test_microdesc.Tpo src/test/$(DEPDIR)/src_test_test-test_microdesc.Po
#	$(AM_V_CC)source='src/test/test_microdesc.c' object='src/test/src_test_test-test_microdesc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_test_test_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o src/test/src_test_test-test_microdesc.obj `if test -f 'src/test/test_microdesc.c'; then $(CYGPATH_W) 'src/test/test_microdesc.c'; else $(CYGPATH_W) '$(srcdir)/src/test/test_microdesc.c'; fi`

src/test/src_test_test-test_pt.o: src/test/test_pt.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_test_test_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT src/test/src_test_test-test_pt.o -MD -MP -MF src/test/$(DEPDIR)/src_test_test-test_pt.Tpo -c -o src/test/src_test_test-test_pt.o `test -f 'src/test/test_pt.c' || echo '$(srcdir)/'`src/test/test_pt.c
	$(AM_V_at)$(am__mv) src/test/$(DEPDIR)/src_test_test-test_pt.Tpo src/test/$(DEPDIR)/src_test_test-test_pt.Po
#	$(AM_V_CC)source='src/test/test_pt.c' object='src/test/src_test_test-test_pt.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_test_test_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o src/test/src_test_test-test_pt.o `test -f 'src/test/test_pt.c' || echo '$(srcdir)/'`src/test/test_pt.c

src/test/src_test_test-test_pt.obj: src/test/test_pt.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_test_test_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT src/test/src_test_test-test_pt.obj -MD -MP -MF src/test/$(DEPDIR)/src_test_test-test_pt.Tpo -c -o src/test/src_test_test-test_pt.obj `if test -f 'src/test/test_pt.c'; then $(CYGPATH_W) 'src/test/test_pt.c'; else $(CYGPATH_W) '$(srcdir)/src/test/test_pt.c'; fi`
	$(AM_V_at)$(am__mv) src/test/$(DEPDIR)/src_test_test-test_pt.Tpo src/test/$(DEPDIR)/src_test_test-test_pt.Po
#	$(AM_V_CC)source='src/test/test_pt.c' object='src/test/src_test_test-test_pt.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_test_test_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o src/test/src_test_test-test_pt.obj `if test -f 'src/test/test_pt.c'; then $(CYGPATH_W) 'src/test/test_pt.c'; else $(CYGPATH_W) '$(srcdir)/src/test/test_pt.c'; fi`

src/test/src_test_test-test_replay.o: src/test/test_replay.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_test_test_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT src/test/src_test_test-test_replay.o -MD -MP -MF src/test/$(DEPDIR)/src_test_test-test_replay.Tpo -c -o src/test/src_test_test-test_replay.o `test -f 'src/test/test_replay.c' || echo '$(srcdir)/'`src/test/test_replay.c
	$(AM_V_at)$(am__mv) src/test/$(DEPDIR)/src_test_test-test_replay.Tpo src/test/$(DEPDIR)/src_test_test-test_replay.Po
#	$(AM_V_CC)source='src/test/test_replay.c' object='src/test/src_test_test-test_replay.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_test_test_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o src/test/src_test_test-test_replay.o `test -f 'src/test/test_replay.c' || echo '$(srcdir)/'`src/test/test_replay.c

src/test/src_test_test-test_replay.obj: src/test/test_replay.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_test_test_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT src/test/src_test_test-test_replay.obj -MD -MP -MF src/test/$(DEPDIR)/src_test_test-test_replay.Tpo -c -o src/test/src_test_test-test_replay.obj `if test -f 'src/test/test_replay.c'; then $(CYGPATH_W) 'src/test/test_replay.c'; else $(CYGPATH_W) '$(srcdir)/src/test/test_replay.c'; fi`
	$(AM_V_at)$(am__mv) src/test/$(DEPDIR)/src_test_test-test_replay.Tpo src/test/$(DEPDIR)/src_test_test-test_replay.Po
#	$(AM_V_CC)source='src/test/test_replay.c' object='src/test/src_test_test-test_replay.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_test_test_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o src/test/src_test_test-test_replay.obj `if test -f 'src/test/test_replay.c'; then $(CYGPATH_W) 'src/test/test_replay.c'; else $(CYGPATH_W) '$(srcdir)/src/test/test_replay.c'; fi`

src/test/src_test_test-test_util.o: src/test/test_util.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_test_test_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT src/test/src_test_test-test_util.o -MD -MP -MF src/test/$(DEPDIR)/src_test_test-test_util.Tpo -c -o src/test/src_test_test-test_util.o `test -f 'src/test/test_util.c' || echo '$(srcdir)/'`src/test/test_util.c
	$(AM_V_at)$(am__mv) src/test/$(DEPDIR)/src_test_test-test_util.Tpo src/test/$(DEPDIR)/src_test_test-test_util.Po
#	$(AM_V_CC)source='src/test/test_util.c' object='src/test/src_test_test-test_util.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_test_test_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o src/test/src_test_test-test_util.o `test -f 'src/test/test_util.c' || echo '$(srcdir)/'`src/test/test_util.c

src/test/src_test_test-test_util.obj: src/test/test_util.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_test_test_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT src/test/src_test_test-test_util.obj -MD -MP -MF src/test/$(DEPDIR)/src_test_test-test_util.Tpo -c -o src/test/src_test_test-test_util.obj `if test -f 'src/test/test_util.c'; then $(CYGPATH_W) 'src/test/test_util.c'; else $(CYGPATH_W) '$(srcdir)/src/test/test_util.c'; fi`
	$(AM_V_at)$(am__mv) src/test/$(DEPDIR)/src_test_test-test_util.Tpo src/test/$(DEPDIR)/src_test_test-test_util.Po
#	$(AM_V_CC)source='src/test/test_util.c' object='src/test/src_test_test-test_util.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_test_test_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o src/test/src_test_test-test_util.obj `if test -f 'src/test/test_util.c'; then $(CYGPATH_W) 'src/test/test_util.c'; else $(CYGPATH_W) '$(srcdir)/src/test/test_util.c'; fi`

src/test/src_test_test-test_config.o: src/test/test_config.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_test_test_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT src/test/src_test_test-test_config.o -MD -MP -MF src/test/$(DEPDIR)/src_test_test-test_config.Tpo -c -o src/test/src_test_test-test_config.o `test -f 'src/test/test_config.c' || echo '$(srcdir)/'`src/test/test_config.c
	$(AM_V_at)$(am__mv) src/test/$(DEPDIR)/src_test_test-test_config.Tpo src/test/$(DEPDIR)/src_test_test-test_config.Po
#	$(AM_V_CC)source='src/test/test_config.c' object='src/test/src_test_test-test_config.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_test_test_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o src/test/src_test_test-test_config.o `test -f 'src/test/test_config.c' || echo '$(srcdir)/'`src/test/test_config.c

src/test/src_test_test-test_config.obj: src/test/test_config.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_test_test_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT src/test/src_test_test-test_config.obj -MD -MP -MF src/test/$(DEPDIR)/src_test_test-test_config.Tpo -c -o src/test/src_test_test-test_config.obj `if test -f 'src/test/test_config.c'; then $(CYGPATH_W) 'src/test/test_config.c'; else $(CYGPATH_W) '$(srcdir)/src/test/test_config.c'; fi`
	$(AM_V_at)$(am__mv) src/test/$(DEPDIR)/src_test_test-test_config.Tpo src/test/$(DEPDIR)/src_test_test-test_config.Po
#	$(AM_V_CC)source='src/test/test_config.c' object='src/test/src_test_test-test_config.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_test_test_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o src/test/src_test_test-test_config.obj `if test -f 'src/test/test_config.c'; then $(CYGPATH_W) 'src/test/test_config.c'; else $(CYGPATH_W) '$(srcdir)/src/test/test_config.c'; fi`

src/test/src_test_test-tinytest.o: src/test/tinytest.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_test_test_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT src/test/src_test_test-tinytest.o -MD -MP -MF src/test/$(DEPDIR)/src_test_test-tinytest.Tpo -c -o src/test/src_test_test-tinytest.o `test -f 'src/test/tinytest.c' || echo '$(srcdir)/'`src/test/tinytest.c
	$(AM_V_at)$(am__mv) src/test/$(DEPDIR)/src_test_test-tinytest.Tpo src/test/$(DEPDIR)/src_test_test-tinytest.Po
#	$(AM_V_CC)source='src/test/tinytest.c' object='src/test/src_test_test-tinytest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_test_test_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o src/test/src_test_test-tinytest.o `test -f 'src/test/tinytest.c' || echo '$(srcdir)/'`src/test/tinytest.c

src/test/src_test_test-tinytest.obj: src/test/tinytest.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_test_test_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT src/test/src_test_test-tinytest.obj -MD -MP -MF src/test/$(DEPDIR)/src_test_test-tinytest.Tpo -c -o src/test/src_test_test-tinytest.obj `if test -f 'src/test/tinytest.c'; then $(CYGPATH_W) 'src/test/tinytest.c'; else $(CYGPATH_W) '$(srcdir)/src/test/tinytest.c'; fi`
	$(AM_V_at)$(am__mv) src/test/$(DEPDIR)/src_test_test-tinytest.Tpo src/test/$(DEPDIR)/src_test_test-tinytest.Po
#	$(AM_V_CC)source='src/test/tinytest.c' object='src/test/src_test_test-tinytest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_test_test_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o src/test/src_test_test-tinytest.obj `if test -f 'src/test/tinytest.c'; then $(CYGPATH_W) 'src/test/tinytest.c'; else $(CYGPATH_W) '$(srcdir)/src/test/tinytest.c'; fi`

src/tools/tor-fw-helper/src_tools_tor_fw_helper_tor_fw_helper-tor-fw-helper.o: src/tools/tor-fw-helper/tor-fw-helper.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_tools_tor_fw_helper_tor_fw_helper_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT src/tools/tor-fw-helper/src_tools_tor_fw_helper_tor_fw_helper-tor-fw-helper.o -MD -MP -MF src/tools/tor-fw-helper/$(DEPDIR)/src_tools_tor_fw_helper_tor_fw_helper-tor-fw-helper.Tpo -c -o src/tools/tor-fw-helper/src_tools_tor_fw_helper_tor_fw_helper-tor-fw-helper.o `test -f 'src/tools/tor-fw-helper/tor-fw-helper.c' || echo '$(srcdir)/'`src/tools/tor-fw-helper/tor-fw-helper.c
	$(AM_V_at)$(am__mv) src/tools/tor-fw-helper/$(DEPDIR)/src_tools_tor_fw_helper_tor_fw_helper-tor-fw-helper.Tpo src/tools/tor-fw-helper/$(DEPDIR)/src_tools_tor_fw_helper_tor_fw_helper-tor-fw-helper.Po
#	$(AM_V_CC)source='src/tools/tor-fw-helper/tor-fw-helper.c' object='src/tools/tor-fw-helper/src_tools_tor_fw_helper_tor_fw_helper-tor-fw-helper.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_tools_tor_fw_helper_tor_fw_helper_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o src/tools/tor-fw-helper/src_tools_tor_fw_helper_tor_fw_helper-tor-fw-helper.o `test -f 'src/tools/tor-fw-helper/tor-fw-helper.c' || echo '$(srcdir)/'`src/tools/tor-fw-helper/tor-fw-helper.c

src/tools/tor-fw-helper/src_tools_tor_fw_helper_tor_fw_helper-tor-fw-helper.obj: src/tools/tor-fw-helper/tor-fw-helper.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_tools_tor_fw_helper_tor_fw_helper_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT src/tools/tor-fw-helper/src_tools_tor_fw_helper_tor_fw_helper-tor-fw-helper.obj -MD -MP -MF src/tools/tor-fw-helper/$(DEPDIR)/src_tools_tor_fw_helper_tor_fw_helper-tor-fw-helper.Tpo -c -o src/tools/tor-fw-helper/src_tools_tor_fw_helper_tor_fw_helper-tor-fw-helper.obj `if test -f 'src/tools/tor-fw-helper/tor-fw-helper.c'; then $(CYGPATH_W) 'src/tools/tor-fw-helper/tor-fw-helper.c'; else $(CYGPATH_W) '$(srcdir)/src/tools/tor-fw-helper/tor-fw-helper.c'; fi`
	$(AM_V_at)$(am__mv) src/tools/tor-fw-helper/$(DEPDIR)/src_tools_tor_fw_helper_tor_fw_helper-tor-fw-helper.Tpo src/tools/tor-fw-helper/$(DEPDIR)/src_tools_tor_fw_helper_tor_fw_helper-tor-fw-helper.Po
#	$(AM_V_CC)source='src/tools/tor-fw-helper/tor-fw-helper.c' object='src/tools/tor-fw-helper/src_tools_tor_fw_helper_tor_fw_helper-tor-fw-helper.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_tools_tor_fw_helper_tor_fw_helper_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o src/tools/tor-fw-helper/src_tools_tor_fw_helper_tor_fw_helper-tor-fw-helper.obj `if test -f 'src/tools/tor-fw-helper/tor-fw-helper.c'; then $(CYGPATH_W) 'src/tools/tor-fw-helper/tor-fw-helper.c'; else $(CYGPATH_W) '$(srcdir)/src/tools/tor-fw-helper/tor-fw-helper.c'; fi`

src/tools/tor-fw-helper/src_tools_tor_fw_helper_tor_fw_helper-tor-fw-helper-natpmp.o: src/tools/tor-fw-helper/tor-fw-helper-natpmp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_tools_tor_fw_helper_tor_fw_helper_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT src/tools/tor-fw-helper/src_tools_tor_fw_helper_tor_fw_helper-tor-fw-helper-natpmp.o -MD -MP -MF src/tools/tor-fw-helper/$(DEPDIR)/src_tools_tor_fw_helper_tor_fw_helper-tor-fw-helper-natpmp.Tpo -c -o src/tools/tor-fw-helper/src_tools_tor_fw_helper_tor_fw_helper-tor-fw-helper-natpmp.o `test -f 'src/tools/tor-fw-helper/tor-fw-helper-natpmp.c' || echo '$(srcdir)/'`src/tools/tor-fw-helper/tor-fw-helper-natpmp.c
	$(AM_V_at)$(am__mv) src/tools/tor-fw-helper/$(DEPDIR)/src_tools_tor_fw_helper_tor_fw_helper-tor-fw-helper-natpmp.Tpo src/tools/tor-fw-helper/$(DEPDIR)/src_tools_tor_fw_helper_tor_fw_helper-tor-fw-helper-natpmp.Po
#	$(AM_V_CC)source='src/tools/tor-fw-helper/tor-fw-helper-natpmp.c' object='src/tools/tor-fw-helper/src_tools_tor_fw_helper_tor_fw_helper-tor-fw-helper-natpmp.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_tools_tor_fw_helper_tor_fw_helper_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o src/tools/tor-fw-helper/src_tools_tor_fw_helper_tor_fw_helper-tor-fw-helper-natpmp.o `test -f 'src/tools/tor-fw-helper/tor-fw-helper-natpmp.c' || echo '$(srcdir)/'`src/tools/tor-fw-helper/tor-fw-helper-natpmp.c

src/tools/tor-fw-helper/src_tools_tor_fw_helper_tor_fw_helper-tor-fw-helper-natpmp.obj: src/tools/tor-fw-helper/tor-fw-helper-natpmp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_tools_tor_fw_helper_tor_fw_helper_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT src/tools/tor-fw-helper/src_tools_tor_fw_helper_tor_fw_helper-tor-fw-helper-natpmp.obj -MD -MP -MF src/tools/tor-fw-helper/$(DEPDIR)/src_tools_tor_fw_helper_tor_fw_helper-tor-fw-helper-natpmp.Tpo -c -o src/tools/tor-fw-helper/src_tools_tor_fw_helper_tor_fw_helper-tor-fw-helper-natpmp.obj `if test -f 'src/tools/tor-fw-helper/tor-fw-helper-natpmp.c'; then $(CYGPATH_W) 'src/tools/tor-fw-helper/tor-fw-helper-natpmp.c'; else $(CYGPATH_W) '$(srcdir)/src/tools/tor-fw-helper/tor-fw-helper-natpmp.c'; fi`
	$(AM_V_at)$(am__mv) src/tools/tor-fw-helper/$(DEPDIR)/src_tools_tor_fw_helper_tor_fw_helper-tor-fw-helper-natpmp.Tpo src/tools/tor-fw-helper/$(DEPDIR)/src_tools_tor_fw_helper_tor_fw_helper-tor-fw-helper-natpmp.Po
#	$(AM_V_CC)source='src/tools/tor-fw-helper/tor-fw-helper-natpmp.c' object='src/tools/tor-fw-helper/src_tools_tor_fw_helper_tor_fw_helper-tor-fw-helper-natpmp.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_tools_tor_fw_helper_tor_fw_helper_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o src/tools/tor-fw-helper/src_tools_tor_fw_helper_tor_fw_helper-tor-fw-helper-natpmp.obj `if test -f 'src/tools/tor-fw-helper/tor-fw-helper-natpmp.c'; then $(CYGPATH_W) 'src/tools/tor-fw-helper/tor-fw-helper-natpmp.c'; else $(CYGPATH_W) '$(srcdir)/src/tools/tor-fw-helper/tor-fw-helper-natpmp.c'; fi`

src/tools/tor-fw-helper/src_tools_tor_fw_helper_tor_fw_helper-tor-fw-helper-upnp.o: src/tools/tor-fw-helper/tor-fw-helper-upnp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_tools_tor_fw_helper_tor_fw_helper_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT src/tools/tor-fw-helper/src_tools_tor_fw_helper_tor_fw_helper-tor-fw-helper-upnp.o -MD -MP -MF src/tools/tor-fw-helper/$(DEPDIR)/src_tools_tor_fw_helper_tor_fw_helper-tor-fw-helper-upnp.Tpo -c -o src/tools/tor-fw-helper/src_tools_tor_fw_helper_tor_fw_helper-tor-fw-helper-upnp.o `test -f 'src/tools/tor-fw-helper/tor-fw-helper-upnp.c' || echo '$(srcdir)/'`src/tools/tor-fw-helper/tor-fw-helper-upnp.c
	$(AM_V_at)$(am__mv) src/tools/tor-fw-helper/$(DEPDIR)/src_tools_tor_fw_helper_tor_fw_helper-tor-fw-helper-upnp.Tpo src/tools/tor-fw-helper/$(DEPDIR)/src_tools_tor_fw_helper_tor_fw_helper-tor-fw-helper-upnp.Po
#	$(AM_V_CC)source='src/tools/tor-fw-helper/tor-fw-helper-upnp.c' object='src/tools/tor-fw-helper/src_tools_tor_fw_helper_tor_fw_helper-tor-fw-helper-upnp.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_tools_tor_fw_helper_tor_fw_helper_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o src/tools/tor-fw-helper/src_tools_tor_fw_helper_tor_fw_helper-tor-fw-helper-upnp.o `test -f 'src/tools/tor-fw-helper/tor-fw-helper-upnp.c' || echo '$(srcdir)/'`src/tools/tor-fw-helper/tor-fw-helper-upnp.c

src/tools/tor-fw-helper/src_tools_tor_fw_helper_tor_fw_helper-tor-fw-helper-upnp.obj: src/tools/tor-fw-helper/tor-fw-helper-upnp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_tools_tor_fw_helper_tor_fw_helper_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT src/tools/tor-fw-helper/src_tools_tor_fw_helper_tor_fw_helper-tor-fw-helper-upnp.obj -MD -MP -MF src/tools/tor-fw-helper/$(DEPDIR)/src_tools_tor_fw_helper_tor_fw_helper-tor-fw-helper-upnp.Tpo -c -o src/tools/tor-fw-helper/src_tools_tor_fw_helper_tor_fw_helper-tor-fw-helper-upnp.obj `if test -f 'src/tools/tor-fw-helper/tor-fw-helper-upnp.c'; then $(CYGPATH_W) 'src/tools/tor-fw-helper/tor-fw-helper-upnp.c'; else $(CYGPATH_W) '$(srcdir)/src/tools/tor-fw-helper/tor-fw-helper-upnp.c'; fi`
	$(AM_V_at)$(am__mv) src/tools/tor-fw-helper/$(DEPDIR)/src_tools_tor_fw_helper_tor_fw_helper-tor-fw-helper-upnp.Tpo src/tools/tor-fw-helper/$(DEPDIR)/src_tools_tor_fw_helper_tor_fw_helper-tor-fw-helper-upnp.Po
#	$(AM_V_CC)source='src/tools/tor-fw-helper/tor-fw-helper-upnp.c' object='src/tools/tor-fw-helper/src_tools_tor_fw_helper_tor_fw_helper-tor-fw-helper-upnp.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_tools_tor_fw_helper_tor_fw_helper_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o src/tools/tor-fw-helper/src_tools_tor_fw_helper_tor_fw_helper-tor-fw-helper-upnp.obj `if test -f 'src/tools/tor-fw-helper/tor-fw-helper-upnp.c'; then $(CYGPATH_W) 'src/tools/tor-fw-helper/tor-fw-helper-upnp.c'; else $(CYGPATH_W) '$(srcdir)/src/tools/tor-fw-helper/tor-fw-helper-upnp.c'; fi`
install-man1: $(nodist_man1_MANS)
	@$(NORMAL_INSTALL)
	test -z "$(man1dir)" || $(MKDIR_P) "$(DESTDIR)$(man1dir)"
	@list='$(nodist_man1_MANS)'; test -n "$(man1dir)" || exit 0; \
	{ for i in $$list; do echo "$$i"; done; \
	} | while read p; do \
	  if test -f $$p; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; echo "$$p"; \
	done | \
	sed -e 'n;s,.*/,,;p;h;s,.*\.,,;s,^[^1][0-9a-z]*$$,1,;x' \
	      -e 's,\.[0-9a-z]*$$,,;$(transform);G;s,\n,.,' | \
	sed 'N;N;s,\n, ,g' | { \
	list=; while read file base inst; do \
	  if test "$$base" = "$$inst"; then list="$$list $$file"; else \
	    echo " $(INSTALL_DATA) '$$file' '$(DESTDIR)$(man1dir)/$$inst'"; \
	    $(INSTALL_DATA) "$$file" "$(DESTDIR)$(man1dir)/$$inst" || exit $$?; \
	  fi; \
	done; \
	for i in $$list; do echo "$$i"; done | $(am__base_list) | \
	while read files; do \
	  test -z "$$files" || { \
	    echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(man1dir)'"; \
	    $(INSTALL_DATA) $$files "$(DESTDIR)$(man1dir)" || exit $$?; }; \
	done; }

uninstall-man1:
	@$(NORMAL_UNINSTALL)
	@list='$(nodist_man1_MANS)'; test -n "$(man1dir)" || exit 0; \
	files=`{ for i in $$list; do echo "$$i"; done; \
	} | sed -e 's,.*/,,;h;s,.*\.,,;s,^[^1][0-9a-z]*$$,1,;x' \
	      -e 's,\.[0-9a-z]*$$,,;$(transform);G;s,\n,.,'`; \
	dir='$(DESTDIR)$(man1dir)'; $(am__uninstall_files_from_dir)
install-confDATA: $(conf_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(confdir)" || $(MKDIR_P) "$(DESTDIR)$(confdir)"
	@list='$(conf_DATA)'; test -n "$(confdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(confdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(confdir)" || exit $$?; \
	done

uninstall-confDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(conf_DATA)'; test -n "$(confdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(confdir)'; $(am__uninstall_files_from_dir)
install-docDATA: $(doc_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(docdir)" || $(MKDIR_P) "$(DESTDIR)$(docdir)"
	@list='$(doc_DATA)'; test -n "$(docdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(docdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(docdir)" || exit $$?; \
	done

uninstall-docDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(doc_DATA)'; test -n "$(docdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(docdir)'; $(am__uninstall_files_from_dir)
install-tordataDATA: $(tordata_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(tordatadir)" || $(MKDIR_P) "$(DESTDIR)$(tordatadir)"
	@list='$(tordata_DATA)'; test -n "$(tordatadir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(tordatadir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(tordatadir)" || exit $$?; \
	done

uninstall-tordataDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(tordata_DATA)'; test -n "$(tordatadir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(tordatadir)'; $(am__uninstall_files_from_dir)

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES) orconfig.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS) orconfig.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES) orconfig.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS) orconfig.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; skip=0; \
	srcdir=$(srcdir); export srcdir; \
	list=' $(TESTS) '; \
	$(am__tty_colors); \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xpass=`expr $$xpass + 1`; \
		failed=`expr $$failed + 1`; \
		col=$$red; res=XPASS; \
	      ;; \
	      *) \
		col=$$grn; res=PASS; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xfail=`expr $$xfail + 1`; \
		col=$$lgn; res=XFAIL; \
	      ;; \
	      *) \
		failed=`expr $$failed + 1`; \
		col=$$red; res=FAIL; \
	      ;; \
	      esac; \
	    else \
	      skip=`expr $$skip + 1`; \
	      col=$$blu; res=SKIP; \
	    fi; \
	    echo "$${col}$$res$${std}: $$tst"; \
	  done; \
	  if test "$$all" -eq 1; then \
	    tests="test"; \
	    All=""; \
	  else \
	    tests="tests"; \
	    All="All "; \
	  fi; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="$$All$$all $$tests passed"; \
	    else \
	      if test "$$xfail" -eq 1; then failures=failure; else failures=failures; fi; \
	      banner="$$All$$all $$tests behaved as expected ($$xfail expected $$failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all $$tests failed"; \
	    else \
	      if test "$$xpass" -eq 1; then passes=pass; else passes=passes; fi; \
	      banner="$$failed of $$all $$tests did not behave as expected ($$xpass unexpected $$passes)"; \
	    fi; \
	  fi; \
	  dashes="$$banner"; \
	  skipped=""; \
	  if test "$$skip" -ne 0; then \
	    if test "$$skip" -eq 1; then \
	      skipped="($$skip test was not run)"; \
	    else \
	      skipped="($$skip tests were not run)"; \
	    fi; \
	    test `echo "$$skipped" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$skipped"; \
	  fi; \
	  report=""; \
	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
	    report="Please report to $(PACKAGE_BUGREPORT)"; \
	    test `echo "$$report" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$report"; \
	  fi; \
	  dashes=`echo "$$dashes" | sed s/./=/g`; \
	  if test "$$failed" -eq 0; then \
	    col="$$grn"; \
	  else \
	    col="$$red"; \
	  fi; \
	  echo "$${col}$$dashes$${std}"; \
	  echo "$${col}$$banner$${std}"; \
	  test -z "$$skipped" || echo "$${col}$$skipped$${std}"; \
	  test -z "$$report" || echo "$${col}$$report$${std}"; \
	  echo "$${col}$$dashes$${std}"; \
	  test "$$failed" -eq 0; \
	else :; fi

distdir: $(DISTFILES)
	@list='$(MANS)'; if test -n "$$list"; then \
	  list=`for p in $$list; do \
	    if test -f $$p; then d=; else d="$(srcdir)/"; fi; \
	    if test -f "$$d$$p"; then echo "$$d$$p"; else :; fi; done`; \
	  if test -n "$$list" && \
	    grep 'ab help2man is required to generate this page' $$list >/dev/null; then \
	    echo "error: found man pages containing the \`missing help2man' replacement text:" >&2; \
	    grep -l 'ab help2man is required to generate this page' $$list | sed 's/^/         /' >&2; \
	    echo "       to fix them, install help2man, remove and regenerate the man pages;" >&2; \
	    echo "       typically \`make maintainer-clean' will remove them" >&2; \
	    exit 1; \
	  else :; fi; \
	else :; fi
	$(am__remove_distdir)
	test -d "$(distdir)" || mkdir "$(distdir)"
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	-test -n "$(am__skip_mode_fix)" \
	|| find "$(distdir)" -type d ! -perm -755 \
		-exec chmod u+rwx,go+rx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r "$(distdir)"
dist-gzip: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__remove_distdir)

dist-bzip2: distdir
	tardir=$(distdir) && $(am__tar) | BZIP2=$${BZIP2--9} bzip2 -c >$(distdir).tar.bz2
	$(am__remove_distdir)

dist-lzip: distdir
	tardir=$(distdir) && $(am__tar) | lzip -c $${LZIP_OPT--9} >$(distdir).tar.lz
	$(am__remove_distdir)

dist-lzma: distdir
	tardir=$(distdir) && $(am__tar) | lzma -9 -c >$(distdir).tar.lzma
	$(am__remove_distdir)

dist-xz: distdir
	tardir=$(distdir) && $(am__tar) | XZ_OPT=$${XZ_OPT--e} xz -c >$(distdir).tar.xz
	$(am__remove_distdir)

dist-tarZ: distdir
	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z
	$(am__remove_distdir)

dist-shar: distdir
	shar $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).shar.gz
	$(am__remove_distdir)

dist-zip: distdir
	-rm -f $(distdir).zip
	zip -rq $(distdir).zip $(distdir)
	$(am__remove_distdir)

dist dist-all: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__remove_distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	case '$(DIST_ARCHIVES)' in \
	*.tar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).tar.gz | $(am__untar) ;;\
	*.tar.bz2*) \
	  bzip2 -dc $(distdir).tar.bz2 | $(am__untar) ;;\
	*.tar.lzma*) \
	  lzma -dc $(distdir).tar.lzma | $(am__untar) ;;\
	*.tar.lz*) \
	  lzip -dc $(distdir).tar.lz | $(am__untar) ;;\
	*.tar.xz*) \
	  xz -dc $(distdir).tar.xz | $(am__untar) ;;\
	*.tar.Z*) \
	  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\
	*.shar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).shar.gz | unshar ;;\
	*.zip*) \
	  unzip $(distdir).zip ;;\
	esac
	chmod -R a-w $(distdir); chmod a+w $(distdir)
	mkdir $(distdir)/_build
	mkdir $(distdir)/_inst
	chmod a-w $(distdir)
	test -d $(distdir)/_build || exit 0; \
	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
	  && am__cwd=`pwd` \
	  && $(am__cd) $(distdir)/_build \
	  && ../configure --srcdir=.. --prefix="$$dc_install_base" \
	    $(AM_DISTCHECK_CONFIGURE_FLAGS) \
	    $(DISTCHECK_CONFIGURE_FLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
	        distuninstallcheck \
	  && chmod -R a-w "$$dc_install_base" \
	  && ({ \
	       (cd ../.. && umask 077 && mkdir "$$dc_destdir") \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \
	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
	      } || { rm -rf "$$dc_destdir"; exit 1; }) \
	  && rm -rf "$$dc_destdir" \
	  && $(MAKE) $(AM_MAKEFLAGS) dist \
	  && rm -rf $(DIST_ARCHIVES) \
	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck \
	  && cd "$$am__cwd" \
	  || exit 1
	$(am__remove_distdir)
	@(echo "$(distdir) archives ready for distribution: "; \
	  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \
	  sed -e 1h -e 1s/./=/g -e 1p -e 1x -e '$$p' -e '$$x'
distuninstallcheck:
	@test -n '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: trying to run $@ with an empty' \
	       '$$(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	$(am__cd) '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: cannot chdir into $(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	test `$(am__distuninstallcheck_listfiles) | wc -l` -eq 0 \
	   || { echo "ERROR: files left after uninstall:" ; \
	        if test -n "$(DESTDIR)"; then \
	          echo "  (check DESTDIR support)"; \
	        fi ; \
	        $(distuninstallcheck_listfiles) ; \
	        exit 1; } >&2
distcleancheck: distclean
	@if test '$(srcdir)' = . ; then \
	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
	  exit 1 ; \
	fi
	@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
	  || { echo "ERROR: files left in build directory after distclean:" ; \
	       $(distcleancheck_listfiles) ; \
	       exit 1; } >&2
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile $(LIBRARIES) $(PROGRAMS) $(SCRIPTS) $(MANS) $(DATA) \
		$(HEADERS) orconfig.h
installdirs:
	for dir in "$(DESTDIR)$(bindir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(man1dir)" "$(DESTDIR)$(confdir)" "$(DESTDIR)$(docdir)" "$(DESTDIR)$(tordatadir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f src/common/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/common/$(am__dirstamp)
	-rm -f src/or/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/or/$(am__dirstamp)
	-rm -f src/test/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/test/$(am__dirstamp)
	-rm -f src/tools/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/tools/$(am__dirstamp)
	-rm -f src/tools/tor-fw-helper/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/tools/tor-fw-helper/$(am__dirstamp)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-noinstLIBRARIES \
	clean-noinstPROGRAMS mostlyclean-am

distclean: distclean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf src/common/$(DEPDIR) src/or/$(DEPDIR) src/test/$(DEPDIR) src/tools/$(DEPDIR) src/tools/tor-fw-helper/$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-hdr distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-confDATA install-docDATA install-man \
	install-tordataDATA

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS install-binSCRIPTS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man: install-man1

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf $(top_srcdir)/autom4te.cache
	-rm -rf src/common/$(DEPDIR) src/or/$(DEPDIR) src/test/$(DEPDIR) src/tools/$(DEPDIR) src/tools/tor-fw-helper/$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-binSCRIPTS \
	uninstall-confDATA uninstall-docDATA uninstall-man \
	uninstall-tordataDATA

uninstall-man: uninstall-man1

.MAKE: all check-am install-am install-strip

.PHONY: CTAGS GTAGS all all-am am--refresh check check-TESTS check-am \
	clean clean-binPROGRAMS clean-generic clean-noinstLIBRARIES \
	clean-noinstPROGRAMS ctags dist dist-all dist-bzip2 dist-gzip \
	dist-lzip dist-lzma dist-shar dist-tarZ dist-xz dist-zip \
	distcheck distclean distclean-compile distclean-generic \
	distclean-hdr distclean-tags distcleancheck distdir \
	distuninstallcheck dvi dvi-am html html-am info info-am \
	install install-am install-binPROGRAMS install-binSCRIPTS \
	install-confDATA install-data install-data-am install-docDATA \
	install-dvi install-dvi-am install-exec install-exec-am \
	install-html install-html-am install-info install-info-am \
	install-man install-man1 install-pdf install-pdf-am install-ps \
	install-ps-am install-strip install-tordataDATA installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-binPROGRAMS uninstall-binSCRIPTS \
	uninstall-confDATA uninstall-docDATA uninstall-man \
	uninstall-man1 uninstall-tordataDATA


src/common/common_sha1.i: $(libor_SOURCES) $(libor_crypto_a_SOURCES) $(COMMONHEADERS)
	$(AM_V_GEN)if test "/usr/bin/sha1sum" != none; then \
	  (cd "$(srcdir)" && "/usr/bin/sha1sum" $(src_common_libor_SOURCES) $(src_common_libor_crypto_a_SOURCES) $(COMMONHEADERS)) | "sed" -n 's/^\(.*\)$$/"\1\\n"/p' > $@; \
	elif test "/usr/bin/openssl" != none; then \
	  (cd "$(srcdir)" && "/usr/bin/openssl" sha1 $(src_common_libor_SOURCES) $(src_Common_libor_crypto_a_SOURCES) $(COMMONHEADERS)) | "sed" -n 's/SHA1(\(.*\))= \(.*\)/"\2  \1\\n"/p' > $@; \
	else \
	  rm $@; \
	  touch $@; \
	fi

src/common/util_codedigest.o: src/common/common_sha1.i

src/or/tor_main.o: micro-revision.i

src/or/config_codedigest.o: src/or/or_sha1.i

micro-revision.i: FORCE
	@rm -f micro-revision.tmp;				\
	if test -d "$(top_srcdir)/.git" &&				\
	  test -x "`which git 2>&1;true`"; then				\
	  HASH="`cd "$(top_srcdir)" && git rev-parse --short=16 HEAD`";	\
	  echo \"$$HASH\" > micro-revision.tmp; 			\
        fi;								\
	if test ! -f micro-revision.tmp ; then			\
	  if test ! -f micro-revision.i ; then			\
	    echo '""' > micro-revision.i;			\
	  fi;								\
	elif test ! -f micro-revision.i ||			\
	  test x"`cat micro-revision.tmp`" != x"`cat micro-revision.i`"; then \
	  mv micro-revision.tmp micro-revision.i;		\
	fi; true

src/or/or_sha1.i: $(src_or_tor_SOURCES) $(src_or_libtor_a_SOURCES) $(ORHEADERS)
	$(AM_V_GEN)if test "/usr/bin/sha1sum" != none; then \
	  (cd "$(srcdir)" && "/usr/bin/sha1sum" $(src_or_tor_SOURCES) $(src_or_libtor_a_SOURCES) $(ORHEADERS) ) | \
	  "sed" -n 's/^\(.*\)$$/"\1\\n"/p' > src/or/or_sha1.i; \
	elif test "/usr/bin/openssl" != none; then \
	  (cd "$(srcdir)" && "/usr/bin/openssl" sha1 $(src_or_tor_SOURCES) $(src_or_libtor_a_SOURCES) $(ORHEADERS)) | \
	  "sed" -n 's/SHA1(\(.*\))= \(.*\)/"\2  \1\\n"/p' > src/or/or_sha1.i; \
	else \
	  rm src/or/or_sha1.i; \
	  touch src/or/or_sha1.i; \
	fi

FORCE:
# fallback_consensus

# If we don't have it, fake it.
src_config_fallback-consensus:
	touch src/config/fallback-consensus

# Generate the html documentation from asciidoc, but don't do
# machine-specific replacements yet
$(html_in) :
	$(AM_V_GEN)$(top_srcdir)/doc/asciidoc-helper.sh html /usr/bin/asciidoc $(top_srcdir)/$@

# Generate the manpage from asciidoc, but don't do
# machine-specific replacements yet
$(man_in) :
	$(AM_V_GEN)$(top_srcdir)/doc/asciidoc-helper.sh man /usr/bin/a2x $(top_srcdir)/$@

doc/tor.1.in: doc/tor.1.txt
doc/tor-gencert.1.in: doc/tor-gencert.1.txt
doc/tor-resolve.1.in: doc/tor-resolve.1.txt
doc/torify.1.in: doc/torify.1.txt
doc/tor-fw-helper.1.in: doc/tor-fw-helper.1.txt

doc/tor.html.in: doc/tor.1.txt
doc/tor-gencert.html.in: doc/tor-gencert.1.txt
doc/tor-resolve.html.in: doc/tor-resolve.1.txt
doc/torify.html.in: doc/torify.1.txt
doc/tor-fw-helper.html.in: doc/tor-fw-helper.1.txt

# use ../config.status to swap all machine-specific magic strings
# in the asciidoc with their replacements.
$(asciidoc_product) :
	$(AM_V_GEN)$(MKDIR_P) $(@D)
	$(AM_V_at)if test -e $(top_srcdir)/$@.in && ! test -e $@.in ; then \
		cp $(top_srcdir)/$@.in $@; \
	fi
	$(AM_V_at)./config.status -q --file=$@;

doc/tor.html: doc/tor.html.in
doc/tor-gencert.html: doc/tor-gencert.html.in
doc/tor-resolve.html: doc/tor-resolve.html.in
doc/torify.html: doc/torify.html.in
doc/tor-fw-helper.html: doc/tor-fw-helper.html.in

doc/tor.1: doc/tor.1.in
doc/tor-gencert.1: doc/tor-gencert.1.in
doc/tor-resolve.1: doc/tor-resolve.1.in
doc/torify.1: doc/torify.1.in
doc/tor-fw-helper.1: doc/tor-fw-helper.1.in

#install-data-local:
#	$(INSTALL) -m 755 -d $(LOCALSTATEDIR)/lib/tor

# Allows to override rpmbuild with rpmbuild-md5 from fedora-packager so that
# building for EL5 won't fail on https://bugzilla.redhat.com/show_bug.cgi?id=490613
RPMBUILD ?= rpmbuild

# Use automake's dist-gzip target to build the tarball
dist-rpm: dist-gzip
	TIMESTAMP=$$(date +"%Y-%m-%d_%H.%M.%S"); 				\
	RPM_BUILD_DIR=$$(mktemp -d "/tmp/tor-rpm-build-$$TIMESTAMP-XXXX");	\
	mkdir -p "$$RPM_BUILD_DIR"/{BUILD,RPMS,SOURCES/"tor-$(VERSION)",SPECS,SRPMS}; \
	cp -fa "$(distdir).tar.gz" "$$RPM_BUILD_DIR"/SOURCES/;			\
	LIBS=-lrt $(RPMBUILD) -ba --define "_topdir $$RPM_BUILD_DIR" tor.spec; 	\
	cp -fa "$$RPM_BUILD_DIR"/SRPMS/* .;                           		\
	cp -fa "$$RPM_BUILD_DIR"/RPMS/* .;                            		\
	rm -rf "$$RPM_BUILD_DIR";						\
	echo "RPM build finished";						\
	#end of dist-rpm

dist: check

doxygen:
	doxygen && cd doc/doxygen/latex && make

test: all
	./src/test/test

# Avoid strlcpy.c, strlcat.c, aes.c, OpenBSD_malloc_Linux.c, sha256.c,
# eventdns.[hc], tinytest*.[ch]
check-spaces:
	./contrib/checkSpace.pl -C                    \
		src/common/*.h			      \
		src/common/[^asO]*.c		      \
		src/common/address.c		      \
		src/or/[^e]*.[ch]		      \
		src/or/eventdns_tor.h		      \
		src/test/test*.[ch]		      \
		src/test/[^t]*.[ch]		      \
		src/tools/*.[ch]		      \
		src/tools/tor-fw-helper/*.[ch]

check-docs:
	./contrib/checkOptionDocs.pl

check-logs:
	./contrib/checkLogs.pl                        \
		src/*/*.[ch] | sort -n

version:
	@echo "Tor 0.2.4.3-alpha-dev"
	@if test -d "$(top_srcdir)/.git" && test -x "`which git 2>&1;true`"; then \
	   echo -n "git: " ;\
	   (cd "$(top_srcdir)" && git rev-parse --short=16 HEAD); \
	fi

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
